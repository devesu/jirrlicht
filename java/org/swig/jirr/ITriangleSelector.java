/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class ITriangleSelector {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ITriangleSelector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ITriangleSelector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_ITriangleSelector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int getTriangleCount() {
    return JirrJNI.ITriangleSelector_getTriangleCount(swigCPtr, this);
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount, SWIGTYPE_p_irr__core__CMatrix4T_float_t transform) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_0(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount), SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(transform));
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_1(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount));
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount, aabbox3df box, SWIGTYPE_p_irr__core__CMatrix4T_float_t transform) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_2(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount), aabbox3df.getCPtr(box), box, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(transform));
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount, aabbox3df box) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_3(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount), aabbox3df.getCPtr(box), box);
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount, line3df line, SWIGTYPE_p_irr__core__CMatrix4T_float_t transform) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_4(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount), line3df.getCPtr(line), line, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(transform));
  }

  public void getTriangles(triangle3df triangles, int arraySize, SWIGTYPE_p_int outTriangleCount, line3df line) {
    JirrJNI.ITriangleSelector_getTriangles__SWIG_5(swigCPtr, this, triangle3df.getCPtr(triangles), triangles, arraySize, SWIGTYPE_p_int.getCPtr(outTriangleCount), line3df.getCPtr(line), line);
  }

  public ISceneNode getSceneNodeForTriangle(long triangleIndex) {
    long cPtr = JirrJNI.ITriangleSelector_getSceneNodeForTriangle(swigCPtr, this, triangleIndex);
    return (cPtr == 0) ? null : new ISceneNode(cPtr, false);
  }

  public long getSelectorCount() {
    return JirrJNI.ITriangleSelector_getSelectorCount(swigCPtr, this);
  }

  public ITriangleSelector getSelector(long index) {
    long cPtr = JirrJNI.ITriangleSelector_getSelector__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new ITriangleSelector(cPtr, false);
  }

}
