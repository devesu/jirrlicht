/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum ELOG_LEVEL {
  ELL_DEBUG,
  ELL_INFORMATION,
  ELL_WARNING,
  ELL_ERROR,
  ELL_NONE;

  public final int swigValue() {
    return swigValue;
  }

  public static ELOG_LEVEL swigToEnum(int swigValue) {
    ELOG_LEVEL[] swigValues = ELOG_LEVEL.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (ELOG_LEVEL swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + ELOG_LEVEL.class + " with value " + swigValue);
  }

  private ELOG_LEVEL() {
    this.swigValue = SwigNext.next++;
  }

  private ELOG_LEVEL(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private ELOG_LEVEL(ELOG_LEVEL swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

