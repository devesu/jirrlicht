/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package org.swig.jirr;

public class quaternion {

    private long swigCPtr;
    protected boolean swigCMemOwn;

    protected quaternion(long cPtr, boolean cMemoryOwn) {
        swigCMemOwn = cMemoryOwn;
        swigCPtr = cPtr;
    }

    protected static long getCPtr(quaternion obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    @Override
    protected void finalize() {
        delete();
    }

    public synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                JirrJNI.delete_quaternion(swigCPtr);
            }
            swigCPtr = 0;
        }
    }

    public quaternion() {
        this(JirrJNI.new_quaternion__SWIG_0(), true);
    }

    public quaternion(float x, float y, float z, float w) {
        this(JirrJNI.new_quaternion__SWIG_1(x, y, z, w), true);
    }

    public quaternion(float x, float y, float z) {
        this(JirrJNI.new_quaternion__SWIG_2(x, y, z), true);
    }

    public quaternion(vector3df vec) {
        this(JirrJNI.new_quaternion__SWIG_3(vector3df.getCPtr(vec), vec), true);
    }

    public quaternion(SWIGTYPE_p_irr__core__CMatrix4T_float_t mat) {
        this(JirrJNI.new_quaternion__SWIG_4(SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(mat)), true);
    }

    public boolean equalsOperator(quaternion other) {
        return JirrJNI.quaternion_equalsOperator(swigCPtr, this, quaternion.getCPtr(other), other);
    }

    public boolean notEqualsOperator(quaternion other) {
        return JirrJNI.quaternion_notEqualsOperator(swigCPtr, this, quaternion.getCPtr(other), other);
    }

    public quaternion assignOperator(quaternion other) {
        return new quaternion(JirrJNI.quaternion_assignOperator__SWIG_0(swigCPtr, this, quaternion.getCPtr(other), other), false);
    }

    public quaternion assignOperator(SWIGTYPE_p_irr__core__CMatrix4T_float_t other) {
        return new quaternion(JirrJNI.quaternion_assignOperator__SWIG_1(swigCPtr, this, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(other)), false);
    }

    public quaternion addOperator(quaternion other) {
        return new quaternion(JirrJNI.quaternion_addOperator(swigCPtr, this, quaternion.getCPtr(other), other), true);
    }

    public quaternion timesOperator(quaternion other) {
        return new quaternion(JirrJNI.quaternion_timesOperator__SWIG_0(swigCPtr, this, quaternion.getCPtr(other), other), true);
    }

    public quaternion timesOperator(float s) {
        return new quaternion(JirrJNI.quaternion_timesOperator__SWIG_1(swigCPtr, this, s), true);
    }

    public quaternion assignTimesOperator(float s) {
        return new quaternion(JirrJNI.quaternion_assignTimesOperator__SWIG_0(swigCPtr, this, s), false);
    }

    public vector3df timesOperator(vector3df v) {
        return new vector3df(JirrJNI.quaternion_timesOperator__SWIG_2(swigCPtr, this, vector3df.getCPtr(v), v), true);
    }

    public quaternion assignTimesOperator(quaternion other) {
        return new quaternion(JirrJNI.quaternion_assignTimesOperator__SWIG_1(swigCPtr, this, quaternion.getCPtr(other), other), false);
    }

    public float dotProduct(quaternion other) {
        return JirrJNI.quaternion_dotProduct(swigCPtr, this, quaternion.getCPtr(other), other);
    }

    public quaternion set(float x, float y, float z, float w) {
        return new quaternion(JirrJNI.quaternion_set__SWIG_0(swigCPtr, this, x, y, z, w), false);
    }

    public quaternion set(float x, float y, float z) {
        return new quaternion(JirrJNI.quaternion_set__SWIG_1(swigCPtr, this, x, y, z), false);
    }

    public quaternion set(vector3df vec) {
        return new quaternion(JirrJNI.quaternion_set__SWIG_2(swigCPtr, this, vector3df.getCPtr(vec), vec), false);
    }

    public quaternion set(quaternion quat) {
        return new quaternion(JirrJNI.quaternion_set__SWIG_3(swigCPtr, this, quaternion.getCPtr(quat), quat), false);
    }

    public boolean equals(quaternion other, float tolerance) {
        return JirrJNI.quaternion_equals__SWIG_0(swigCPtr, this, quaternion.getCPtr(other), other, tolerance);
    }

    public boolean equals(quaternion other) {
        return JirrJNI.quaternion_equals__SWIG_1(swigCPtr, this, quaternion.getCPtr(other), other);
    }

    public quaternion normalize() {
        return new quaternion(JirrJNI.quaternion_normalize(swigCPtr, this), false);
    }

    public SWIGTYPE_p_irr__core__CMatrix4T_float_t getMatrix() {
        return new SWIGTYPE_p_irr__core__CMatrix4T_float_t(JirrJNI.quaternion_getMatrix__SWIG_0(swigCPtr, this), true);
    }

    public void getMatrix(SWIGTYPE_p_irr__core__CMatrix4T_float_t dest, vector3df translation) {
        JirrJNI.quaternion_getMatrix__SWIG_1(swigCPtr, this, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(dest), vector3df.getCPtr(translation), translation);
    }

    public void getMatrix(SWIGTYPE_p_irr__core__CMatrix4T_float_t dest) {
        JirrJNI.quaternion_getMatrix__SWIG_2(swigCPtr, this, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(dest));
    }

    public void getMatrixCenter(SWIGTYPE_p_irr__core__CMatrix4T_float_t dest, vector3df center, vector3df translation) {
        JirrJNI.quaternion_getMatrixCenter(swigCPtr, this, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(dest), vector3df.getCPtr(center), center, vector3df.getCPtr(translation), translation);
    }

    public void getMatrix_transposed(SWIGTYPE_p_irr__core__CMatrix4T_float_t dest) {
        JirrJNI.quaternion_getMatrix_transposed(swigCPtr, this, SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(dest));
    }

    public quaternion makeInverse() {
        return new quaternion(JirrJNI.quaternion_makeInverse(swigCPtr, this), false);
    }

    public quaternion lerp(quaternion q1, quaternion q2, float time) {
        return new quaternion(JirrJNI.quaternion_lerp(swigCPtr, this, quaternion.getCPtr(q1), q1, quaternion.getCPtr(q2), q2, time), false);
    }

    public quaternion slerp(quaternion q1, quaternion q2, float time, float threshold) {
        return new quaternion(JirrJNI.quaternion_slerp__SWIG_0(swigCPtr, this, quaternion.getCPtr(q1), q1, quaternion.getCPtr(q2), q2, time, threshold), false);
    }

    public quaternion slerp(quaternion q1, quaternion q2, float time) {
        return new quaternion(JirrJNI.quaternion_slerp__SWIG_1(swigCPtr, this, quaternion.getCPtr(q1), q1, quaternion.getCPtr(q2), q2, time), false);
    }

    public quaternion fromAngleAxis(float angle, vector3df axis) {
        return new quaternion(JirrJNI.quaternion_fromAngleAxis(swigCPtr, this, angle, vector3df.getCPtr(axis), axis), false);
    }

    public void toAngleAxis(SWIGTYPE_p_float angle, vector3df axis) {
        JirrJNI.quaternion_toAngleAxis(swigCPtr, this, SWIGTYPE_p_float.getCPtr(angle), vector3df.getCPtr(axis), axis);
    }

    public void toEuler(vector3df euler) {
        JirrJNI.quaternion_toEuler(swigCPtr, this, vector3df.getCPtr(euler), euler);
    }

    public quaternion makeIdentity() {
        return new quaternion(JirrJNI.quaternion_makeIdentity(swigCPtr, this), false);
    }

    public quaternion rotationFromTo(vector3df from, vector3df to) {
        return new quaternion(JirrJNI.quaternion_rotationFromTo(swigCPtr, this, vector3df.getCPtr(from), from, vector3df.getCPtr(to), to), false);
    }

    public void setX(float value) {
        JirrJNI.quaternion_X_set(swigCPtr, this, value);
    }

    public float getX() {
        return JirrJNI.quaternion_X_get(swigCPtr, this);
    }

    public void setY(float value) {
        JirrJNI.quaternion_Y_set(swigCPtr, this, value);
    }

    public float getY() {
        return JirrJNI.quaternion_Y_get(swigCPtr, this);
    }

    public void setZ(float value) {
        JirrJNI.quaternion_Z_set(swigCPtr, this, value);
    }

    public float getZ() {
        return JirrJNI.quaternion_Z_get(swigCPtr, this);
    }

    public void setW(float value) {
        JirrJNI.quaternion_W_set(swigCPtr, this, value);
    }

    public float getW() {
        return JirrJNI.quaternion_W_get(swigCPtr, this);
    }
}
