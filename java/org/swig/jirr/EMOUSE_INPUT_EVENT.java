/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum EMOUSE_INPUT_EVENT {
  EMIE_LMOUSE_PRESSED_DOWN(0),
  EMIE_RMOUSE_PRESSED_DOWN,
  EMIE_MMOUSE_PRESSED_DOWN,
  EMIE_LMOUSE_LEFT_UP,
  EMIE_RMOUSE_LEFT_UP,
  EMIE_MMOUSE_LEFT_UP,
  EMIE_MOUSE_MOVED,
  EMIE_MOUSE_WHEEL,
  EMIE_LMOUSE_DOUBLE_CLICK,
  EMIE_RMOUSE_DOUBLE_CLICK,
  EMIE_MMOUSE_DOUBLE_CLICK,
  EMIE_LMOUSE_TRIPLE_CLICK,
  EMIE_RMOUSE_TRIPLE_CLICK,
  EMIE_MMOUSE_TRIPLE_CLICK,
  EMIE_COUNT;

  public final int swigValue() {
    return swigValue;
  }

  public static EMOUSE_INPUT_EVENT swigToEnum(int swigValue) {
    EMOUSE_INPUT_EVENT[] swigValues = EMOUSE_INPUT_EVENT.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (EMOUSE_INPUT_EVENT swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + EMOUSE_INPUT_EVENT.class + " with value " + swigValue);
  }

  private EMOUSE_INPUT_EVENT() {
    this.swigValue = SwigNext.next++;
  }

  private EMOUSE_INPUT_EVENT(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private EMOUSE_INPUT_EVENT(EMOUSE_INPUT_EVENT swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

