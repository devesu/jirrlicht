/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum E_TEXTURE_CREATION_FLAG {
  ETCF_ALWAYS_16_BIT(0x00000001),
  ETCF_ALWAYS_32_BIT(0x00000002),
  ETCF_OPTIMIZED_FOR_QUALITY(0x00000004),
  ETCF_OPTIMIZED_FOR_SPEED(0x00000008),
  ETCF_CREATE_MIP_MAPS(0x00000010),
  ETCF_NO_ALPHA_CHANNEL(0x00000020),
  ETCF_ALLOW_NON_POWER_2(0x00000040),
  ETCF_FORCE_32_BIT_DO_NOT_USE(0x7fffffff);

  public final int swigValue() {
    return swigValue;
  }

  public static E_TEXTURE_CREATION_FLAG swigToEnum(int swigValue) {
    E_TEXTURE_CREATION_FLAG[] swigValues = E_TEXTURE_CREATION_FLAG.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (E_TEXTURE_CREATION_FLAG swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + E_TEXTURE_CREATION_FLAG.class + " with value " + swigValue);
  }

  private E_TEXTURE_CREATION_FLAG() {
    this.swigValue = SwigNext.next++;
  }

  private E_TEXTURE_CREATION_FLAG(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private E_TEXTURE_CREATION_FLAG(E_TEXTURE_CREATION_FLAG swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

