/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class IVideoDriver {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected IVideoDriver(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IVideoDriver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_IVideoDriver(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean beginScene(boolean backBuffer, boolean zBuffer, SColor color, SWIGTYPE_p_SExposedVideoData videoData, recti sourceRect) {
    return JirrJNI.IVideoDriver_beginScene__SWIG_0(swigCPtr, this, backBuffer, zBuffer, SColor.getCPtr(color), color, SWIGTYPE_p_SExposedVideoData.getCPtr(videoData), recti.getCPtr(sourceRect), sourceRect);
  }

  public boolean beginScene(boolean backBuffer, boolean zBuffer, SColor color, SWIGTYPE_p_SExposedVideoData videoData) {
    return JirrJNI.IVideoDriver_beginScene__SWIG_1(swigCPtr, this, backBuffer, zBuffer, SColor.getCPtr(color), color, SWIGTYPE_p_SExposedVideoData.getCPtr(videoData));
  }

  public boolean beginScene(boolean backBuffer, boolean zBuffer, SColor color) {
    return JirrJNI.IVideoDriver_beginScene__SWIG_2(swigCPtr, this, backBuffer, zBuffer, SColor.getCPtr(color), color);
  }

  public boolean beginScene(boolean backBuffer, boolean zBuffer) {
    return JirrJNI.IVideoDriver_beginScene__SWIG_3(swigCPtr, this, backBuffer, zBuffer);
  }

  public boolean beginScene(boolean backBuffer) {
    return JirrJNI.IVideoDriver_beginScene__SWIG_4(swigCPtr, this, backBuffer);
  }

  public boolean beginScene() {
    return JirrJNI.IVideoDriver_beginScene__SWIG_5(swigCPtr, this);
  }

  public boolean endScene() {
    return JirrJNI.IVideoDriver_endScene(swigCPtr, this);
  }

  public boolean queryFeature(SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE feature) {
    return JirrJNI.IVideoDriver_queryFeature(swigCPtr, this, SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE.getCPtr(feature));
  }

  public void disableFeature(SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE feature, boolean flag) {
    JirrJNI.IVideoDriver_disableFeature__SWIG_0(swigCPtr, this, SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE.getCPtr(feature), flag);
  }

  public void disableFeature(SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE feature) {
    JirrJNI.IVideoDriver_disableFeature__SWIG_1(swigCPtr, this, SWIGTYPE_p_E_VIDEO_DRIVER_FEATURE.getCPtr(feature));
  }

  public IAttributes getDriverAttributes() {
    return new IAttributes(JirrJNI.IVideoDriver_getDriverAttributes(swigCPtr, this), false);
  }

  public boolean checkDriverReset() {
    return JirrJNI.IVideoDriver_checkDriverReset(swigCPtr, this);
  }

  public void setTransform(E_TRANSFORMATION_STATE state, SWIGTYPE_p_irr__core__CMatrix4T_float_t mat) {
    JirrJNI.IVideoDriver_setTransform(swigCPtr, this, state.swigValue(), SWIGTYPE_p_irr__core__CMatrix4T_float_t.getCPtr(mat));
  }

  public SWIGTYPE_p_irr__core__CMatrix4T_float_t getTransform(E_TRANSFORMATION_STATE state) {
    return new SWIGTYPE_p_irr__core__CMatrix4T_float_t(JirrJNI.IVideoDriver_getTransform(swigCPtr, this, state.swigValue()), false);
  }

  public long getImageLoaderCount() {
    return JirrJNI.IVideoDriver_getImageLoaderCount(swigCPtr, this);
  }

  public IImageLoader getImageLoader(long n) {
    long cPtr = JirrJNI.IVideoDriver_getImageLoader(swigCPtr, this, n);
    return (cPtr == 0) ? null : new IImageLoader(cPtr, false);
  }

  public long getImageWriterCount() {
    return JirrJNI.IVideoDriver_getImageWriterCount(swigCPtr, this);
  }

  public SWIGTYPE_p_irr__video__IImageWriter getImageWriter(long n) {
    long cPtr = JirrJNI.IVideoDriver_getImageWriter(swigCPtr, this, n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_irr__video__IImageWriter(cPtr, false);
  }

  public void setMaterial(SMaterial material) {
    JirrJNI.IVideoDriver_setMaterial(swigCPtr, this, SMaterial.getCPtr(material), material);
  }
  
  public ITexture getTexture(String filename) {
    long cPtr = JirrJNI.IVideoDriver_getTexture__SWIG_0(swigCPtr, this, new CorePath(filename).getPointer());
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture getTexture(IReadFile file) {
    long cPtr = JirrJNI.IVideoDriver_getTexture__SWIG_1(swigCPtr, this, IReadFile.getCPtr(file), file);
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture getTextureByIndex(long index) {
    long cPtr = JirrJNI.IVideoDriver_getTextureByIndex(swigCPtr, this, index);
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public long getTextureCount() {
    return JirrJNI.IVideoDriver_getTextureCount(swigCPtr, this);
  }

  public void renameTexture(ITexture texture, String newName) {
    JirrJNI.IVideoDriver_renameTexture(swigCPtr, this, ITexture.getCPtr(texture), texture, CorePath.getCPtr(newName));
  }

  public ITexture addTexture(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, String name, ECOLOR_FORMAT format) {
    long cPtr = JirrJNI.IVideoDriver_addTexture__SWIG_0(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), CorePath.getCPtr(name), format.swigValue());
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addTexture(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, String name) {
    long cPtr = JirrJNI.IVideoDriver_addTexture__SWIG_1(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), CorePath.getCPtr(name));
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addTexture(String name, IImage image, SWIGTYPE_p_void mipmapData) {
    long cPtr = JirrJNI.IVideoDriver_addTexture__SWIG_2(swigCPtr, this, CorePath.getCPtr(name), IImage.getCPtr(image), image, SWIGTYPE_p_void.getCPtr(mipmapData));
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addTexture(String name, IImage image) {
    long cPtr = JirrJNI.IVideoDriver_addTexture__SWIG_3(swigCPtr, this, CorePath.getCPtr(name), IImage.getCPtr(image), image);
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addRenderTargetTexture(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, String name, ECOLOR_FORMAT format) {
    long cPtr = JirrJNI.IVideoDriver_addRenderTargetTexture__SWIG_0(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), CorePath.getCPtr(name), format.swigValue());
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addRenderTargetTexture(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, String name) {
    long cPtr = JirrJNI.IVideoDriver_addRenderTargetTexture__SWIG_1(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), CorePath.getCPtr(name));
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public ITexture addRenderTargetTexture(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size) {
    long cPtr = JirrJNI.IVideoDriver_addRenderTargetTexture__SWIG_2(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size));
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public void removeTexture(ITexture texture) {
    JirrJNI.IVideoDriver_removeTexture(swigCPtr, this, ITexture.getCPtr(texture), texture);
  }

  public void removeAllTextures() {
    JirrJNI.IVideoDriver_removeAllTextures(swigCPtr, this);
  }

  public void removeHardwareBuffer(IMeshBuffer mb) {
    JirrJNI.IVideoDriver_removeHardwareBuffer(swigCPtr, this, IMeshBuffer.getCPtr(mb), mb);
  }

  public void removeAllHardwareBuffers() {
    JirrJNI.IVideoDriver_removeAllHardwareBuffers(swigCPtr, this);
  }

  public void addOcclusionQuery(ISceneNode node, IMesh mesh) {
    JirrJNI.IVideoDriver_addOcclusionQuery__SWIG_0(swigCPtr, this, ISceneNode.getCPtr(node), node, IMesh.getCPtr(mesh), mesh);
  }

  public void addOcclusionQuery(ISceneNode node) {
    JirrJNI.IVideoDriver_addOcclusionQuery__SWIG_1(swigCPtr, this, ISceneNode.getCPtr(node), node);
  }

  public void removeOcclusionQuery(ISceneNode node) {
    JirrJNI.IVideoDriver_removeOcclusionQuery(swigCPtr, this, ISceneNode.getCPtr(node), node);
  }

  public void removeAllOcclusionQueries() {
    JirrJNI.IVideoDriver_removeAllOcclusionQueries(swigCPtr, this);
  }

  public void runOcclusionQuery(ISceneNode node, boolean visible) {
    JirrJNI.IVideoDriver_runOcclusionQuery__SWIG_0(swigCPtr, this, ISceneNode.getCPtr(node), node, visible);
  }

  public void runOcclusionQuery(ISceneNode node) {
    JirrJNI.IVideoDriver_runOcclusionQuery__SWIG_1(swigCPtr, this, ISceneNode.getCPtr(node), node);
  }

  public void runAllOcclusionQueries(boolean visible) {
    JirrJNI.IVideoDriver_runAllOcclusionQueries__SWIG_0(swigCPtr, this, visible);
  }

  public void runAllOcclusionQueries() {
    JirrJNI.IVideoDriver_runAllOcclusionQueries__SWIG_1(swigCPtr, this);
  }

  public void updateOcclusionQuery(ISceneNode node, boolean block) {
    JirrJNI.IVideoDriver_updateOcclusionQuery__SWIG_0(swigCPtr, this, ISceneNode.getCPtr(node), node, block);
  }

  public void updateOcclusionQuery(ISceneNode node) {
    JirrJNI.IVideoDriver_updateOcclusionQuery__SWIG_1(swigCPtr, this, ISceneNode.getCPtr(node), node);
  }

  public void updateAllOcclusionQueries(boolean block) {
    JirrJNI.IVideoDriver_updateAllOcclusionQueries__SWIG_0(swigCPtr, this, block);
  }

  public void updateAllOcclusionQueries() {
    JirrJNI.IVideoDriver_updateAllOcclusionQueries__SWIG_1(swigCPtr, this);
  }

  public long getOcclusionQueryResult(ISceneNode node) {
    return JirrJNI.IVideoDriver_getOcclusionQueryResult(swigCPtr, this, ISceneNode.getCPtr(node), node);
  }

  public void makeColorKeyTexture(ITexture texture, SColor color, boolean zeroTexels) {
    JirrJNI.IVideoDriver_makeColorKeyTexture__SWIG_0(swigCPtr, this, ITexture.getCPtr(texture), texture, SColor.getCPtr(color), color, zeroTexels);
  }

  public void makeColorKeyTexture(ITexture texture, SColor color) {
    JirrJNI.IVideoDriver_makeColorKeyTexture__SWIG_1(swigCPtr, this, ITexture.getCPtr(texture), texture, SColor.getCPtr(color), color);
  }

  public void makeColorKeyTexture(ITexture texture, vector2di colorKeyPixelPos, boolean zeroTexels) {
    JirrJNI.IVideoDriver_makeColorKeyTexture__SWIG_2(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(colorKeyPixelPos), colorKeyPixelPos, zeroTexels);
  }

  public void makeColorKeyTexture(ITexture texture, vector2di colorKeyPixelPos) {
    JirrJNI.IVideoDriver_makeColorKeyTexture__SWIG_3(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(colorKeyPixelPos), colorKeyPixelPos);
  }

  public void makeNormalMapTexture(ITexture texture, float amplitude) {
    JirrJNI.IVideoDriver_makeNormalMapTexture__SWIG_0(swigCPtr, this, ITexture.getCPtr(texture), texture, amplitude);
  }

  public void makeNormalMapTexture(ITexture texture) {
    JirrJNI.IVideoDriver_makeNormalMapTexture__SWIG_1(swigCPtr, this, ITexture.getCPtr(texture), texture);
  }

  public boolean setRenderTarget(ITexture texture, boolean clearBackBuffer, boolean clearZBuffer, SColor color) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_0(swigCPtr, this, ITexture.getCPtr(texture), texture, clearBackBuffer, clearZBuffer, SColor.getCPtr(color), color);
  }

  public boolean setRenderTarget(ITexture texture, boolean clearBackBuffer, boolean clearZBuffer) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_1(swigCPtr, this, ITexture.getCPtr(texture), texture, clearBackBuffer, clearZBuffer);
  }

  public boolean setRenderTarget(ITexture texture, boolean clearBackBuffer) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_2(swigCPtr, this, ITexture.getCPtr(texture), texture, clearBackBuffer);
  }

  public boolean setRenderTarget(ITexture texture) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_3(swigCPtr, this, ITexture.getCPtr(texture), texture);
  }

  public boolean setRenderTarget(E_RENDER_TARGET target, boolean clearTarget, boolean clearZBuffer, SColor color) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_4(swigCPtr, this, target.swigValue(), clearTarget, clearZBuffer, SColor.getCPtr(color), color);
  }

  public boolean setRenderTarget(E_RENDER_TARGET target, boolean clearTarget, boolean clearZBuffer) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_5(swigCPtr, this, target.swigValue(), clearTarget, clearZBuffer);
  }

  public boolean setRenderTarget(E_RENDER_TARGET target, boolean clearTarget) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_6(swigCPtr, this, target.swigValue(), clearTarget);
  }

  public boolean setRenderTarget(E_RENDER_TARGET target) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_7(swigCPtr, this, target.swigValue());
  }

  public boolean setRenderTarget(SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t texture, boolean clearBackBuffer, boolean clearZBuffer, SColor color) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_8(swigCPtr, this, SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t.getCPtr(texture), clearBackBuffer, clearZBuffer, SColor.getCPtr(color), color);
  }

  public boolean setRenderTarget(SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t texture, boolean clearBackBuffer, boolean clearZBuffer) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_9(swigCPtr, this, SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t.getCPtr(texture), clearBackBuffer, clearZBuffer);
  }

  public boolean setRenderTarget(SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t texture, boolean clearBackBuffer) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_10(swigCPtr, this, SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t.getCPtr(texture), clearBackBuffer);
  }

  public boolean setRenderTarget(SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t texture) {
    return JirrJNI.IVideoDriver_setRenderTarget__SWIG_11(swigCPtr, this, SWIGTYPE_p_irr__core__arrayT_irr__video__IRenderTarget_irrAllocatorT_irr__video__IRenderTarget_t_t.getCPtr(texture));
  }

  public void setViewPort(recti area) {
    JirrJNI.IVideoDriver_setViewPort(swigCPtr, this, recti.getCPtr(area), area);
  }

  public recti getViewPort() {
    return new recti(JirrJNI.IVideoDriver_getViewPort(swigCPtr, this), false);
  }

  public void drawVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType, SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE pType, SWIGTYPE_p_E_INDEX_TYPE iType) {
    JirrJNI.IVideoDriver_drawVertexPrimitiveList__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue(), SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE.getCPtr(pType), SWIGTYPE_p_E_INDEX_TYPE.getCPtr(iType));
  }

  public void drawVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType, SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE pType) {
    JirrJNI.IVideoDriver_drawVertexPrimitiveList__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue(), SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE.getCPtr(pType));
  }

  public void drawVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType) {
    JirrJNI.IVideoDriver_drawVertexPrimitiveList__SWIG_2(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue());
  }

  public void drawVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount) {
    JirrJNI.IVideoDriver_drawVertexPrimitiveList__SWIG_3(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount);
  }

  public void draw2DVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType, SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE pType, SWIGTYPE_p_E_INDEX_TYPE iType) {
    JirrJNI.IVideoDriver_draw2DVertexPrimitiveList__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue(), SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE.getCPtr(pType), SWIGTYPE_p_E_INDEX_TYPE.getCPtr(iType));
  }

  public void draw2DVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType, SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE pType) {
    JirrJNI.IVideoDriver_draw2DVertexPrimitiveList__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue(), SWIGTYPE_p_irr__scene__E_PRIMITIVE_TYPE.getCPtr(pType));
  }

  public void draw2DVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount, E_VERTEX_TYPE vType) {
    JirrJNI.IVideoDriver_draw2DVertexPrimitiveList__SWIG_2(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount, vType.swigValue());
  }

  public void draw2DVertexPrimitiveList(SWIGTYPE_p_void vertices, long vertexCount, SWIGTYPE_p_void indexList, long primCount) {
    JirrJNI.IVideoDriver_draw2DVertexPrimitiveList__SWIG_3(swigCPtr, this, SWIGTYPE_p_void.getCPtr(vertices), vertexCount, SWIGTYPE_p_void.getCPtr(indexList), primCount);
  }

  public void drawIndexedTriangleList(S3DVertex[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleList__SWIG_0(swigCPtr, this, S3DVertex.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void drawIndexedTriangleList(S3DVertex2TCoords[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleList__SWIG_1(swigCPtr, this, S3DVertex2TCoords.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void drawIndexedTriangleList(S3DVertexTangents[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleList__SWIG_2(swigCPtr, this, S3DVertexTangents.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void drawIndexedTriangleFan(S3DVertex[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleFan__SWIG_0(swigCPtr, this, S3DVertex.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void drawIndexedTriangleFan(S3DVertex2TCoords[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleFan__SWIG_1(swigCPtr, this, S3DVertex2TCoords.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void drawIndexedTriangleFan(S3DVertexTangents[] vertices, long vertexCount, int[] indexList, long triangleCount) {
    JirrJNI.IVideoDriver_drawIndexedTriangleFan__SWIG_2(swigCPtr, this, S3DVertexTangents.cArrayUnwrap(vertices), vertexCount, indexList, triangleCount);
  }

  public void draw3DLine(vector3df start, vector3df end, SColor color) {
    JirrJNI.IVideoDriver_draw3DLine__SWIG_0(swigCPtr, this, vector3df.getCPtr(start), start, vector3df.getCPtr(end), end, SColor.getCPtr(color), color);
  }

  public void draw3DLine(vector3df start, vector3df end) {
    JirrJNI.IVideoDriver_draw3DLine__SWIG_1(swigCPtr, this, vector3df.getCPtr(start), start, vector3df.getCPtr(end), end);
  }

  public void draw3DTriangle(triangle3df triangle, SColor color) {
    JirrJNI.IVideoDriver_draw3DTriangle__SWIG_0(swigCPtr, this, triangle3df.getCPtr(triangle), triangle, SColor.getCPtr(color), color);
  }

  public void draw3DTriangle(triangle3df triangle) {
    JirrJNI.IVideoDriver_draw3DTriangle__SWIG_1(swigCPtr, this, triangle3df.getCPtr(triangle), triangle);
  }

  public void draw3DBox(aabbox3df box, SColor color) {
    JirrJNI.IVideoDriver_draw3DBox__SWIG_0(swigCPtr, this, aabbox3df.getCPtr(box), box, SColor.getCPtr(color), color);
  }

  public void draw3DBox(aabbox3df box) {
    JirrJNI.IVideoDriver_draw3DBox__SWIG_1(swigCPtr, this, aabbox3df.getCPtr(box), box);
  }

  public void draw2DImage(ITexture texture, vector2di destPos) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_0(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(destPos), destPos);
  }

  public void draw2DImage(ITexture texture, vector2di destPos, recti sourceRect, recti clipRect, SColor color, boolean useAlphaChannelOfTexture) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_1(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(destPos), destPos, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color, useAlphaChannelOfTexture);
  }

  public void draw2DImage(ITexture texture, vector2di destPos, recti sourceRect, recti clipRect, SColor color) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_2(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(destPos), destPos, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color);
  }

  public void draw2DImage(ITexture texture, vector2di destPos, recti sourceRect, recti clipRect) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_3(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(destPos), destPos, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect);
  }

  public void draw2DImage(ITexture texture, vector2di destPos, recti sourceRect) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_4(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(destPos), destPos, recti.getCPtr(sourceRect), sourceRect);
  }

  public void draw2DImageBatch(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t indices, int kerningWidth, recti clipRect, SColor color, boolean useAlphaChannelOfTexture) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_0(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t.getCPtr(indices), kerningWidth, recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color, useAlphaChannelOfTexture);
  }

  public void draw2DImageBatch(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t indices, int kerningWidth, recti clipRect, SColor color) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_1(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t.getCPtr(indices), kerningWidth, recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color);
  }

  public void draw2DImageBatch(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t indices, int kerningWidth, recti clipRect) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_2(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t.getCPtr(indices), kerningWidth, recti.getCPtr(clipRect), clipRect);
  }

  public void draw2DImageBatch(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t indices, int kerningWidth) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_3(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t.getCPtr(indices), kerningWidth);
  }

  public void draw2DImageBatch(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t indices) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_4(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), SWIGTYPE_p_irr__core__arrayT_int_irrAllocatorT_int_t_t.getCPtr(indices));
  }

  public void draw2DImageBatch(ITexture texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t positions, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, recti clipRect, SColor color, boolean useAlphaChannelOfTexture) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_5(swigCPtr, this, ITexture.getCPtr(texture), texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t.getCPtr(positions), SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color, useAlphaChannelOfTexture);
  }

  public void draw2DImageBatch(ITexture texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t positions, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, recti clipRect, SColor color) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_6(swigCPtr, this, ITexture.getCPtr(texture), texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t.getCPtr(positions), SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), recti.getCPtr(clipRect), clipRect, SColor.getCPtr(color), color);
  }

  public void draw2DImageBatch(ITexture texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t positions, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects, recti clipRect) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_7(swigCPtr, this, ITexture.getCPtr(texture), texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t.getCPtr(positions), SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects), recti.getCPtr(clipRect), clipRect);
  }

  public void draw2DImageBatch(ITexture texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t positions, SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t sourceRects) {
    JirrJNI.IVideoDriver_draw2DImageBatch__SWIG_8(swigCPtr, this, ITexture.getCPtr(texture), texture, SWIGTYPE_p_irr__core__arrayT_irr__core__vector2dT_irr__s32_t_irrAllocatorT_irr__core__vector2dT_s32_t_t_t.getCPtr(positions), SWIGTYPE_p_irr__core__arrayT_irr__core__rectT_irr__s32_t_irrAllocatorT_irr__core__rectT_s32_t_t_t.getCPtr(sourceRects));
  }

  public void draw2DImage(ITexture texture, recti destRect, recti sourceRect, recti clipRect, SColor[] colors, boolean useAlphaChannelOfTexture) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_5(swigCPtr, this, ITexture.getCPtr(texture), texture, recti.getCPtr(destRect), destRect, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect, SColor.cArrayUnwrap(colors), useAlphaChannelOfTexture);
  }

  public void draw2DImage(ITexture texture, recti destRect, recti sourceRect, recti clipRect, SColor[] colors) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_6(swigCPtr, this, ITexture.getCPtr(texture), texture, recti.getCPtr(destRect), destRect, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect, SColor.cArrayUnwrap(colors));
  }

  public void draw2DImage(ITexture texture, recti destRect, recti sourceRect, recti clipRect) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_7(swigCPtr, this, ITexture.getCPtr(texture), texture, recti.getCPtr(destRect), destRect, recti.getCPtr(sourceRect), sourceRect, recti.getCPtr(clipRect), clipRect);
  }

  public void draw2DImage(ITexture texture, recti destRect, recti sourceRect) {
    JirrJNI.IVideoDriver_draw2DImage__SWIG_8(swigCPtr, this, ITexture.getCPtr(texture), texture, recti.getCPtr(destRect), destRect, recti.getCPtr(sourceRect), sourceRect);
  }

  public void draw2DRectangle(SColor color, recti pos, recti clip) {
    JirrJNI.IVideoDriver_draw2DRectangle__SWIG_0(swigCPtr, this, SColor.getCPtr(color), color, recti.getCPtr(pos), pos, recti.getCPtr(clip), clip);
  }

  public void draw2DRectangle(SColor color, recti pos) {
    JirrJNI.IVideoDriver_draw2DRectangle__SWIG_1(swigCPtr, this, SColor.getCPtr(color), color, recti.getCPtr(pos), pos);
  }

  public void draw2DRectangle(recti pos, SColor colorLeftUp, SColor colorRightUp, SColor colorLeftDown, SColor colorRightDown, recti clip) {
    JirrJNI.IVideoDriver_draw2DRectangle__SWIG_2(swigCPtr, this, recti.getCPtr(pos), pos, SColor.getCPtr(colorLeftUp), colorLeftUp, SColor.getCPtr(colorRightUp), colorRightUp, SColor.getCPtr(colorLeftDown), colorLeftDown, SColor.getCPtr(colorRightDown), colorRightDown, recti.getCPtr(clip), clip);
  }

  public void draw2DRectangle(recti pos, SColor colorLeftUp, SColor colorRightUp, SColor colorLeftDown, SColor colorRightDown) {
    JirrJNI.IVideoDriver_draw2DRectangle__SWIG_3(swigCPtr, this, recti.getCPtr(pos), pos, SColor.getCPtr(colorLeftUp), colorLeftUp, SColor.getCPtr(colorRightUp), colorRightUp, SColor.getCPtr(colorLeftDown), colorLeftDown, SColor.getCPtr(colorRightDown), colorRightDown);
  }

  public void draw2DRectangleOutline(recti pos, SColor color) {
    JirrJNI.IVideoDriver_draw2DRectangleOutline__SWIG_0(swigCPtr, this, recti.getCPtr(pos), pos, SColor.getCPtr(color), color);
  }

  public void draw2DRectangleOutline(recti pos) {
    JirrJNI.IVideoDriver_draw2DRectangleOutline__SWIG_1(swigCPtr, this, recti.getCPtr(pos), pos);
  }

  public void draw2DLine(vector2di start, vector2di end, SColor color) {
    JirrJNI.IVideoDriver_draw2DLine__SWIG_0(swigCPtr, this, vector2di.getCPtr(start), start, vector2di.getCPtr(end), end, SColor.getCPtr(color), color);
  }

  public void draw2DLine(vector2di start, vector2di end) {
    JirrJNI.IVideoDriver_draw2DLine__SWIG_1(swigCPtr, this, vector2di.getCPtr(start), start, vector2di.getCPtr(end), end);
  }

  public void drawPixel(long x, long y, SColor color) {
    JirrJNI.IVideoDriver_drawPixel(swigCPtr, this, x, y, SColor.getCPtr(color), color);
  }

  public void draw2DPolygon(vector2di center, float radius, SColor color, int vertexCount) {
    JirrJNI.IVideoDriver_draw2DPolygon__SWIG_0(swigCPtr, this, vector2di.getCPtr(center), center, radius, SColor.getCPtr(color), color, vertexCount);
  }

  public void draw2DPolygon(vector2di center, float radius, SColor color) {
    JirrJNI.IVideoDriver_draw2DPolygon__SWIG_1(swigCPtr, this, vector2di.getCPtr(center), center, radius, SColor.getCPtr(color), color);
  }

  public void draw2DPolygon(vector2di center, float radius) {
    JirrJNI.IVideoDriver_draw2DPolygon__SWIG_2(swigCPtr, this, vector2di.getCPtr(center), center, radius);
  }

  public void drawStencilShadowVolume(vector3dfarray triangles, boolean zfail, long debugDataVisible) {
    JirrJNI.IVideoDriver_drawStencilShadowVolume__SWIG_0(swigCPtr, this, vector3dfarray.getCPtr(triangles), triangles, zfail, debugDataVisible);
  }

  public void drawStencilShadowVolume(vector3dfarray triangles, boolean zfail) {
    JirrJNI.IVideoDriver_drawStencilShadowVolume__SWIG_1(swigCPtr, this, vector3dfarray.getCPtr(triangles), triangles, zfail);
  }

  public void drawStencilShadowVolume(vector3dfarray triangles) {
    JirrJNI.IVideoDriver_drawStencilShadowVolume__SWIG_2(swigCPtr, this, vector3dfarray.getCPtr(triangles), triangles);
  }

  public void drawStencilShadow(boolean clearStencilBuffer, SColor leftUpEdge, SColor rightUpEdge, SColor leftDownEdge, SColor rightDownEdge) {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_0(swigCPtr, this, clearStencilBuffer, SColor.getCPtr(leftUpEdge), leftUpEdge, SColor.getCPtr(rightUpEdge), rightUpEdge, SColor.getCPtr(leftDownEdge), leftDownEdge, SColor.getCPtr(rightDownEdge), rightDownEdge);
  }

  public void drawStencilShadow(boolean clearStencilBuffer, SColor leftUpEdge, SColor rightUpEdge, SColor leftDownEdge) {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_1(swigCPtr, this, clearStencilBuffer, SColor.getCPtr(leftUpEdge), leftUpEdge, SColor.getCPtr(rightUpEdge), rightUpEdge, SColor.getCPtr(leftDownEdge), leftDownEdge);
  }

  public void drawStencilShadow(boolean clearStencilBuffer, SColor leftUpEdge, SColor rightUpEdge) {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_2(swigCPtr, this, clearStencilBuffer, SColor.getCPtr(leftUpEdge), leftUpEdge, SColor.getCPtr(rightUpEdge), rightUpEdge);
  }

  public void drawStencilShadow(boolean clearStencilBuffer, SColor leftUpEdge) {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_3(swigCPtr, this, clearStencilBuffer, SColor.getCPtr(leftUpEdge), leftUpEdge);
  }

  public void drawStencilShadow(boolean clearStencilBuffer) {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_4(swigCPtr, this, clearStencilBuffer);
  }

  public void drawStencilShadow() {
    JirrJNI.IVideoDriver_drawStencilShadow__SWIG_5(swigCPtr, this);
  }

  public void drawMeshBuffer(IMeshBuffer mb) {
    JirrJNI.IVideoDriver_drawMeshBuffer(swigCPtr, this, IMeshBuffer.getCPtr(mb), mb);
  }

  public void drawMeshBufferNormals(IMeshBuffer mb, float length, SColor color) {
    JirrJNI.IVideoDriver_drawMeshBufferNormals__SWIG_0(swigCPtr, this, IMeshBuffer.getCPtr(mb), mb, length, SColor.getCPtr(color), color);
  }

  public void drawMeshBufferNormals(IMeshBuffer mb, float length) {
    JirrJNI.IVideoDriver_drawMeshBufferNormals__SWIG_1(swigCPtr, this, IMeshBuffer.getCPtr(mb), mb, length);
  }

  public void drawMeshBufferNormals(IMeshBuffer mb) {
    JirrJNI.IVideoDriver_drawMeshBufferNormals__SWIG_2(swigCPtr, this, IMeshBuffer.getCPtr(mb), mb);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType, float start, float end, float density, boolean pixelFog, boolean rangeFog) {
    JirrJNI.IVideoDriver_setFog__SWIG_0(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue(), start, end, density, pixelFog, rangeFog);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType, float start, float end, float density, boolean pixelFog) {
    JirrJNI.IVideoDriver_setFog__SWIG_1(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue(), start, end, density, pixelFog);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType, float start, float end, float density) {
    JirrJNI.IVideoDriver_setFog__SWIG_2(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue(), start, end, density);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType, float start, float end) {
    JirrJNI.IVideoDriver_setFog__SWIG_3(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue(), start, end);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType, float start) {
    JirrJNI.IVideoDriver_setFog__SWIG_4(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue(), start);
  }

  public void setFog(SColor color, E_FOG_TYPE fogType) {
    JirrJNI.IVideoDriver_setFog__SWIG_5(swigCPtr, this, SColor.getCPtr(color), color, fogType.swigValue());
  }

  public void setFog(SColor color) {
    JirrJNI.IVideoDriver_setFog__SWIG_6(swigCPtr, this, SColor.getCPtr(color), color);
  }

  public void setFog() {
    JirrJNI.IVideoDriver_setFog__SWIG_7(swigCPtr, this);
  }

  public void getFog(SColor color, SWIGTYPE_p_irr__video__E_FOG_TYPE fogType, SWIGTYPE_p_float start, SWIGTYPE_p_float end, SWIGTYPE_p_float density, SWIGTYPE_p_bool pixelFog, SWIGTYPE_p_bool rangeFog) {
    JirrJNI.IVideoDriver_getFog(swigCPtr, this, SColor.getCPtr(color), color, SWIGTYPE_p_irr__video__E_FOG_TYPE.getCPtr(fogType), SWIGTYPE_p_float.getCPtr(start), SWIGTYPE_p_float.getCPtr(end), SWIGTYPE_p_float.getCPtr(density), SWIGTYPE_p_bool.getCPtr(pixelFog), SWIGTYPE_p_bool.getCPtr(rangeFog));
  }

  public ECOLOR_FORMAT getColorFormat() {
    return ECOLOR_FORMAT.swigToEnum(JirrJNI.IVideoDriver_getColorFormat(swigCPtr, this));
  }

  public SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t getScreenSize() {
    return new SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t(JirrJNI.IVideoDriver_getScreenSize(swigCPtr, this), false);
  }

  public SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t getCurrentRenderTargetSize() {
    return new SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t(JirrJNI.IVideoDriver_getCurrentRenderTargetSize(swigCPtr, this), false);
  }

  public int getFPS() {
    return JirrJNI.IVideoDriver_getFPS(swigCPtr, this);
  }

  public long getPrimitiveCountDrawn(long mode) {
    return JirrJNI.IVideoDriver_getPrimitiveCountDrawn__SWIG_0(swigCPtr, this, mode);
  }

  public long getPrimitiveCountDrawn() {
    return JirrJNI.IVideoDriver_getPrimitiveCountDrawn__SWIG_1(swigCPtr, this);
  }

  public void deleteAllDynamicLights() {
    JirrJNI.IVideoDriver_deleteAllDynamicLights(swigCPtr, this);
  }

  public int addDynamicLight(SLight light) {
    return JirrJNI.IVideoDriver_addDynamicLight(swigCPtr, this, SLight.getCPtr(light), light);
  }

  public long getMaximalDynamicLightAmount() {
    return JirrJNI.IVideoDriver_getMaximalDynamicLightAmount(swigCPtr, this);
  }

  public long getDynamicLightCount() {
    return JirrJNI.IVideoDriver_getDynamicLightCount(swigCPtr, this);
  }

  public SLight getDynamicLight(long idx) {
    return new SLight(JirrJNI.IVideoDriver_getDynamicLight(swigCPtr, this, idx), false);
  }

  public void turnLightOn(int lightIndex, boolean turnOn) {
    JirrJNI.IVideoDriver_turnLightOn(swigCPtr, this, lightIndex, turnOn);
  }

  public String getName() {
    return JirrJNI.IVideoDriver_getName(swigCPtr, this);
  }

  public void addExternalImageLoader(IImageLoader loader) {
    JirrJNI.IVideoDriver_addExternalImageLoader(swigCPtr, this, IImageLoader.getCPtr(loader), loader);
  }

  public void addExternalImageWriter(SWIGTYPE_p_irr__video__IImageWriter writer) {
    JirrJNI.IVideoDriver_addExternalImageWriter(swigCPtr, this, SWIGTYPE_p_irr__video__IImageWriter.getCPtr(writer));
  }

  public long getMaximalPrimitiveCount() {
    return JirrJNI.IVideoDriver_getMaximalPrimitiveCount(swigCPtr, this);
  }

  public void setTextureCreationFlag(E_TEXTURE_CREATION_FLAG flag, boolean enabled) {
    JirrJNI.IVideoDriver_setTextureCreationFlag__SWIG_0(swigCPtr, this, flag.swigValue(), enabled);
  }

  public void setTextureCreationFlag(E_TEXTURE_CREATION_FLAG flag) {
    JirrJNI.IVideoDriver_setTextureCreationFlag__SWIG_1(swigCPtr, this, flag.swigValue());
  }

  public boolean getTextureCreationFlag(E_TEXTURE_CREATION_FLAG flag) {
    return JirrJNI.IVideoDriver_getTextureCreationFlag(swigCPtr, this, flag.swigValue());
  }

  public IImage createImageFromFile(String filename) {
    long cPtr = JirrJNI.IVideoDriver_createImageFromFile__SWIG_0(swigCPtr, this, CorePath.getCPtr(filename));
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImageFromFile(IReadFile file) {
    long cPtr = JirrJNI.IVideoDriver_createImageFromFile__SWIG_1(swigCPtr, this, IReadFile.getCPtr(file), file);
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public boolean writeImageToFile(IImage image, String filename, long param) {
    return JirrJNI.IVideoDriver_writeImageToFile__SWIG_0(swigCPtr, this, IImage.getCPtr(image), image, CorePath.getCPtr(filename), param);
  }

  public boolean writeImageToFile(IImage image, String filename) {
    return JirrJNI.IVideoDriver_writeImageToFile__SWIG_1(swigCPtr, this, IImage.getCPtr(image), image, CorePath.getCPtr(filename));
  }

  public boolean writeImageToFile(IImage image, IWriteFile file, long param) {
    return JirrJNI.IVideoDriver_writeImageToFile__SWIG_2(swigCPtr, this, IImage.getCPtr(image), image, IWriteFile.getCPtr(file), file, param);
  }

  public boolean writeImageToFile(IImage image, IWriteFile file) {
    return JirrJNI.IVideoDriver_writeImageToFile__SWIG_3(swigCPtr, this, IImage.getCPtr(image), image, IWriteFile.getCPtr(file), file);
  }

  public IImage createImageFromData(ECOLOR_FORMAT format, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, SWIGTYPE_p_void data, boolean ownForeignMemory, boolean deleteMemory) {
    long cPtr = JirrJNI.IVideoDriver_createImageFromData__SWIG_0(swigCPtr, this, format.swigValue(), SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), SWIGTYPE_p_void.getCPtr(data), ownForeignMemory, deleteMemory);
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImageFromData(ECOLOR_FORMAT format, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, SWIGTYPE_p_void data, boolean ownForeignMemory) {
    long cPtr = JirrJNI.IVideoDriver_createImageFromData__SWIG_1(swigCPtr, this, format.swigValue(), SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), SWIGTYPE_p_void.getCPtr(data), ownForeignMemory);
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImageFromData(ECOLOR_FORMAT format, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size, SWIGTYPE_p_void data) {
    long cPtr = JirrJNI.IVideoDriver_createImageFromData__SWIG_2(swigCPtr, this, format.swigValue(), SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size), SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImage(ECOLOR_FORMAT format, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size) {
    long cPtr = JirrJNI.IVideoDriver_createImage__SWIG_0(swigCPtr, this, format.swigValue(), SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size));
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImage(ECOLOR_FORMAT format, IImage imageToCopy) {
    long cPtr = JirrJNI.IVideoDriver_createImage__SWIG_1(swigCPtr, this, format.swigValue(), IImage.getCPtr(imageToCopy), imageToCopy);
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImage(IImage imageToCopy, vector2di pos, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size) {
    long cPtr = JirrJNI.IVideoDriver_createImage__SWIG_2(swigCPtr, this, IImage.getCPtr(imageToCopy), imageToCopy, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size));
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createImage(ITexture texture, vector2di pos, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size) {
    long cPtr = JirrJNI.IVideoDriver_createImage__SWIG_3(swigCPtr, this, ITexture.getCPtr(texture), texture, vector2di.getCPtr(pos), pos, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size));
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public void OnResize(SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t size) {
    JirrJNI.IVideoDriver_OnResize(swigCPtr, this, SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t.getCPtr(size));
  }

  public int addMaterialRenderer(IMaterialRenderer renderer, String name) {
    return JirrJNI.IVideoDriver_addMaterialRenderer__SWIG_0(swigCPtr, this, IMaterialRenderer.getCPtr(renderer), renderer, name);
  }

  public int addMaterialRenderer(IMaterialRenderer renderer) {
    return JirrJNI.IVideoDriver_addMaterialRenderer__SWIG_1(swigCPtr, this, IMaterialRenderer.getCPtr(renderer), renderer);
  }

  public IMaterialRenderer getMaterialRenderer(long idx) {
    long cPtr = JirrJNI.IVideoDriver_getMaterialRenderer(swigCPtr, this, idx);
    return (cPtr == 0) ? null : new IMaterialRenderer(cPtr, false);
  }

  public long getMaterialRendererCount() {
    return JirrJNI.IVideoDriver_getMaterialRendererCount(swigCPtr, this);
  }

  public String getMaterialRendererName(long idx) {
    return JirrJNI.IVideoDriver_getMaterialRendererName(swigCPtr, this, idx);
  }

  public void setMaterialRendererName(int idx, String name) {
    JirrJNI.IVideoDriver_setMaterialRendererName(swigCPtr, this, idx, name);
  }

  public IAttributes createAttributesFromMaterial(SMaterial material, SAttributeReadWriteOptions options) {
    long cPtr = JirrJNI.IVideoDriver_createAttributesFromMaterial__SWIG_0(swigCPtr, this, SMaterial.getCPtr(material), material, SAttributeReadWriteOptions.getCPtr(options), options);
    return (cPtr == 0) ? null : new IAttributes(cPtr, false);
  }

  public IAttributes createAttributesFromMaterial(SMaterial material) {
    long cPtr = JirrJNI.IVideoDriver_createAttributesFromMaterial__SWIG_1(swigCPtr, this, SMaterial.getCPtr(material), material);
    return (cPtr == 0) ? null : new IAttributes(cPtr, false);
  }

  public void fillMaterialStructureFromAttributes(SMaterial outMaterial, IAttributes attributes) {
    JirrJNI.IVideoDriver_fillMaterialStructureFromAttributes(swigCPtr, this, SMaterial.getCPtr(outMaterial), outMaterial, IAttributes.getCPtr(attributes), attributes);
  }

  public SWIGTYPE_p_SExposedVideoData getExposedVideoData() {
    return new SWIGTYPE_p_SExposedVideoData(JirrJNI.IVideoDriver_getExposedVideoData(swigCPtr, this), false);
  }

  public E_DRIVER_TYPE getDriverType() {
    return E_DRIVER_TYPE.swigToEnum(JirrJNI.IVideoDriver_getDriverType(swigCPtr, this));
  }

  public IGPUProgrammingServices getGPUProgrammingServices() {
    long cPtr = JirrJNI.IVideoDriver_getGPUProgrammingServices(swigCPtr, this);
    return (cPtr == 0) ? null : new IGPUProgrammingServices(cPtr, false);
  }

  public IMeshManipulator getMeshManipulator() {
    long cPtr = JirrJNI.IVideoDriver_getMeshManipulator(swigCPtr, this);
    return (cPtr == 0) ? null : new IMeshManipulator(cPtr, false);
  }

  public void clearZBuffer() {
    JirrJNI.IVideoDriver_clearZBuffer(swigCPtr, this);
  }

  public IImage createScreenShot(ECOLOR_FORMAT format, E_RENDER_TARGET target) {
    long cPtr = JirrJNI.IVideoDriver_createScreenShot__SWIG_0(swigCPtr, this, format.swigValue(), target.swigValue());
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createScreenShot(ECOLOR_FORMAT format) {
    long cPtr = JirrJNI.IVideoDriver_createScreenShot__SWIG_1(swigCPtr, this, format.swigValue());
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public IImage createScreenShot() {
    long cPtr = JirrJNI.IVideoDriver_createScreenShot__SWIG_2(swigCPtr, this);
    return (cPtr == 0) ? null : new IImage(cPtr, false);
  }

  public ITexture findTexture(String filename) {
    long cPtr = JirrJNI.IVideoDriver_findTexture(swigCPtr, this, CorePath.getCPtr(filename));
    return (cPtr == 0) ? null : new ITexture(cPtr, false);
  }

  public boolean setClipPlane(long index, plane3df plane, boolean enable) {
    return JirrJNI.IVideoDriver_setClipPlane__SWIG_0(swigCPtr, this, index, plane3df.getCPtr(plane), plane, enable);
  }

  public boolean setClipPlane(long index, plane3df plane) {
    return JirrJNI.IVideoDriver_setClipPlane__SWIG_1(swigCPtr, this, index, plane3df.getCPtr(plane), plane);
  }

  public void enableClipPlane(long index, boolean enable) {
    JirrJNI.IVideoDriver_enableClipPlane(swigCPtr, this, index, enable);
  }

  public void setMinHardwareBufferVertexCount(long count) {
    JirrJNI.IVideoDriver_setMinHardwareBufferVertexCount(swigCPtr, this, count);
  }

  public SOverrideMaterial getOverrideMaterial() {
    return new SOverrideMaterial(JirrJNI.IVideoDriver_getOverrideMaterial(swigCPtr, this), false);
  }

  public SMaterial getMaterial2D() {
    return new SMaterial(JirrJNI.IVideoDriver_getMaterial2D(swigCPtr, this), false);
  }

  public void enableMaterial2D(boolean enable) {
    JirrJNI.IVideoDriver_enableMaterial2D__SWIG_0(swigCPtr, this, enable);
  }

  public void enableMaterial2D() {
    JirrJNI.IVideoDriver_enableMaterial2D__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t getVendorInfo() {
    return new SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t(JirrJNI.IVideoDriver_getVendorInfo(swigCPtr, this), true);
  }

  public void setAmbientLight(SColorf color) {
    JirrJNI.IVideoDriver_setAmbientLight(swigCPtr, this, SColorf.getCPtr(color), color);
  }

  public void setAllowZWriteOnTransparent(boolean flag) {
    JirrJNI.IVideoDriver_setAllowZWriteOnTransparent(swigCPtr, this, flag);
  }

  public SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t getMaxTextureSize() {
    return new SWIGTYPE_p_irr__core__dimension2dT_unsigned_int_t(JirrJNI.IVideoDriver_getMaxTextureSize(swigCPtr, this), true);
  }

  public void convertColor(SWIGTYPE_p_void sP, ECOLOR_FORMAT sF, int sN, SWIGTYPE_p_void dP, ECOLOR_FORMAT dF) {
    JirrJNI.IVideoDriver_convertColor(swigCPtr, this, SWIGTYPE_p_void.getCPtr(sP), sF.swigValue(), sN, SWIGTYPE_p_void.getCPtr(dP), dF.swigValue());
  }

}
