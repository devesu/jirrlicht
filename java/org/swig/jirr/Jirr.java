/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class Jirr implements JirrConstants {
  public static SWIGTYPE_p_p_char getGUIElementTypeNames() {
    long cPtr = JirrJNI.GUIElementTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static int getROUNDING_ERROR_S32() {
    return JirrJNI.ROUNDING_ERROR_S32_get();
  }

  public static SWIGTYPE_p_s64 getROUNDING_ERROR_S64() {
    return new SWIGTYPE_p_s64(JirrJNI.ROUNDING_ERROR_S64_get(), true);
  }

  public static float getROUNDING_ERROR_f32() {
    return JirrJNI.ROUNDING_ERROR_f32_get();
  }

  public static double getROUNDING_ERROR_f64() {
    return JirrJNI.ROUNDING_ERROR_f64_get();
  }

  public static float getPI() {
    return JirrJNI.PI_get();
  }

  public static float getRECIPROCAL_PI() {
    return JirrJNI.RECIPROCAL_PI_get();
  }

  public static float getHALF_PI() {
    return JirrJNI.HALF_PI_get();
  }

  public static double getPI64() {
    return JirrJNI.PI64_get();
  }

  public static double getRECIPROCAL_PI64() {
    return JirrJNI.RECIPROCAL_PI64_get();
  }

  public static float getDEGTORAD() {
    return JirrJNI.DEGTORAD_get();
  }

  public static float getRADTODEG() {
    return JirrJNI.RADTODEG_get();
  }

  public static double getDEGTORAD64() {
    return JirrJNI.DEGTORAD64_get();
  }

  public static double getRADTODEG64() {
    return JirrJNI.RADTODEG64_get();
  }

  public static float radToDeg(float radians) {
    return JirrJNI.radToDeg__SWIG_0(radians);
  }

  public static double radToDeg(double radians) {
    return JirrJNI.radToDeg__SWIG_1(radians);
  }

  public static float degToRad(float degrees) {
    return JirrJNI.degToRad__SWIG_0(degrees);
  }

  public static double degToRad(double degrees) {
    return JirrJNI.degToRad__SWIG_1(degrees);
  }

  public static boolean equals(double a, double b, double tolerance) {
    return JirrJNI.equals__SWIG_0(a, b, tolerance);
  }

  public static boolean equals(double a, double b) {
    return JirrJNI.equals__SWIG_1(a, b);
  }

  public static boolean equals(float a, float b, float tolerance) {
    return JirrJNI.equals__SWIG_2(a, b, tolerance);
  }

  public static boolean equals(float a, float b) {
    return JirrJNI.equals__SWIG_3(a, b);
  }

  public static boolean equalsByUlp(float a, float b, int maxUlpDiff) {
    return JirrJNI.equalsByUlp(a, b, maxUlpDiff);
  }

  public static boolean equals(int a, int b, int tolerance) {
    return JirrJNI.equals__SWIG_4(a, b, tolerance);
  }

  public static boolean equals(int a, int b) {
    return JirrJNI.equals__SWIG_5(a, b);
  }

  public static boolean equals(long a, long b, int tolerance) {
    return JirrJNI.equals__SWIG_6(a, b, tolerance);
  }

  public static boolean equals(long a, long b) {
    return JirrJNI.equals__SWIG_7(a, b);
  }

  public static boolean equals(SWIGTYPE_p_s64 a, SWIGTYPE_p_s64 b, SWIGTYPE_p_s64 tolerance) {
    return JirrJNI.equals__SWIG_8(SWIGTYPE_p_s64.getCPtr(a), SWIGTYPE_p_s64.getCPtr(b), SWIGTYPE_p_s64.getCPtr(tolerance));
  }

  public static boolean equals(SWIGTYPE_p_s64 a, SWIGTYPE_p_s64 b) {
    return JirrJNI.equals__SWIG_9(SWIGTYPE_p_s64.getCPtr(a), SWIGTYPE_p_s64.getCPtr(b));
  }

  public static boolean iszero(double a, double tolerance) {
    return JirrJNI.iszero__SWIG_0(a, tolerance);
  }

  public static boolean iszero(double a) {
    return JirrJNI.iszero__SWIG_1(a);
  }

  public static boolean iszero(float a, float tolerance) {
    return JirrJNI.iszero__SWIG_2(a, tolerance);
  }

  public static boolean iszero(float a) {
    return JirrJNI.iszero__SWIG_3(a);
  }

  public static boolean isnotzero(float a, float tolerance) {
    return JirrJNI.isnotzero__SWIG_0(a, tolerance);
  }

  public static boolean isnotzero(float a) {
    return JirrJNI.isnotzero__SWIG_1(a);
  }

  public static boolean iszero(int a, int tolerance) {
    return JirrJNI.iszero__SWIG_4(a, tolerance);
  }

  public static boolean iszero(int a) {
    return JirrJNI.iszero__SWIG_5(a);
  }

  public static boolean iszero(long a, long tolerance) {
    return JirrJNI.iszero__SWIG_6(a, tolerance);
  }

  public static boolean iszero(long a) {
    return JirrJNI.iszero__SWIG_7(a);
  }

  public static boolean iszero(SWIGTYPE_p_s64 a, SWIGTYPE_p_s64 tolerance) {
    return JirrJNI.iszero__SWIG_8(SWIGTYPE_p_s64.getCPtr(a), SWIGTYPE_p_s64.getCPtr(tolerance));
  }

  public static boolean iszero(SWIGTYPE_p_s64 a) {
    return JirrJNI.iszero__SWIG_9(SWIGTYPE_p_s64.getCPtr(a));
  }

  public static int s32_min(int a, int b) {
    return JirrJNI.s32_min(a, b);
  }

  public static int s32_max(int a, int b) {
    return JirrJNI.s32_max(a, b);
  }

  public static int s32_clamp(int value, int low, int high) {
    return JirrJNI.s32_clamp(value, low, high);
  }

  public static long IR(float x) {
    return JirrJNI.IR(x);
  }

  public static float FR(long x) {
    return JirrJNI.FR__SWIG_0(x);
  }

  public static float FR(int x) {
    return JirrJNI.FR__SWIG_1(x);
  }

  public static long if_c_a_else_b(int condition, long a, long b) {
    return JirrJNI.if_c_a_else_b__SWIG_0(condition, a, b);
  }

  public static int if_c_a_else_b(short condition, int a, int b) {
    return JirrJNI.if_c_a_else_b__SWIG_1(condition, a, b);
  }

  public static long if_c_a_else_0(int condition, long a) {
    return JirrJNI.if_c_a_else_0(condition, a);
  }

  public static void setbit_cond(SWIGTYPE_p_unsigned_int state, int condition, long mask) {
    JirrJNI.setbit_cond(SWIGTYPE_p_unsigned_int.getCPtr(state), condition, mask);
  }

  public static float round_(float x) {
    return JirrJNI.round_(x);
  }

  public static void clearFPUException() {
    JirrJNI.clearFPUException();
  }

  public static float squareroot(float f) {
    return JirrJNI.squareroot__SWIG_0(f);
  }

  public static double squareroot(double f) {
    return JirrJNI.squareroot__SWIG_1(f);
  }

  public static int squareroot(int f) {
    return JirrJNI.squareroot__SWIG_2(f);
  }

  public static SWIGTYPE_p_s64 squareroot(SWIGTYPE_p_s64 f) {
    return new SWIGTYPE_p_s64(JirrJNI.squareroot__SWIG_3(SWIGTYPE_p_s64.getCPtr(f)), true);
  }

  public static double reciprocal_squareroot(double x) {
    return JirrJNI.reciprocal_squareroot__SWIG_0(x);
  }

  public static float reciprocal_squareroot(float f) {
    return JirrJNI.reciprocal_squareroot__SWIG_1(f);
  }

  public static int reciprocal_squareroot(int x) {
    return JirrJNI.reciprocal_squareroot__SWIG_2(x);
  }

  public static float reciprocal(float f) {
    return JirrJNI.reciprocal__SWIG_0(f);
  }

  public static double reciprocal(double f) {
    return JirrJNI.reciprocal__SWIG_1(f);
  }

  public static float reciprocal_approxim(float f) {
    return JirrJNI.reciprocal_approxim(f);
  }

  public static int floor32(float x) {
    return JirrJNI.floor32(x);
  }

  public static int ceil32(float x) {
    return JirrJNI.ceil32(x);
  }

  public static int round32(float x) {
    return JirrJNI.round32(x);
  }

  public static float f32_max3(float a, float b, float c) {
    return JirrJNI.f32_max3(a, b, c);
  }

  public static float f32_min3(float a, float b, float c) {
    return JirrJNI.f32_min3(a, b, c);
  }

  public static float fract(float x) {
    return JirrJNI.fract(x);
  }

  public static void setLOCALE_DECIMAL_POINTS(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t value) {
    JirrJNI.LOCALE_DECIMAL_POINTS_set(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(value));
  }

  public static SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t getLOCALE_DECIMAL_POINTS() {
    long cPtr = JirrJNI.LOCALE_DECIMAL_POINTS_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t(cPtr, false);
  }

  public static float[] getFast_atof_table() {
    return JirrJNI.fast_atof_table_get();
  }

  public static long strtoul10(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtoul10__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static long strtoul10(String in) {
    return JirrJNI.strtoul10__SWIG_1(in);
  }

  public static int strtol10(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtol10__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static int strtol10(String in) {
    return JirrJNI.strtol10__SWIG_1(in);
  }

  public static long ctoul16(char in) {
    return JirrJNI.ctoul16(in);
  }

  public static long strtoul16(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtoul16__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static long strtoul16(String in) {
    return JirrJNI.strtoul16__SWIG_1(in);
  }

  public static long strtoul8(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtoul8__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static long strtoul8(String in) {
    return JirrJNI.strtoul8__SWIG_1(in);
  }

  public static long strtoul_prefix(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtoul_prefix__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static long strtoul_prefix(String in) {
    return JirrJNI.strtoul_prefix__SWIG_1(in);
  }

  public static float strtof10(String in, SWIGTYPE_p_p_char out) {
    return JirrJNI.strtof10__SWIG_0(in, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static float strtof10(String in) {
    return JirrJNI.strtof10__SWIG_1(in);
  }

  public static String fast_atof_move(String in, SWIGTYPE_p_float result) {
    return JirrJNI.fast_atof_move(in, SWIGTYPE_p_float.getCPtr(result));
  }

  public static float fast_atof(String floatAsString, SWIGTYPE_p_p_char out) {
    return JirrJNI.fast_atof__SWIG_0(floatAsString, SWIGTYPE_p_p_char.getCPtr(out));
  }

  public static float fast_atof(String floatAsString) {
    return JirrJNI.fast_atof__SWIG_1(floatAsString);
  }

  public static void setLocale_current(eLocaleID value) {
    JirrJNI.locale_current_set(value.swigValue());
  }

  public static eLocaleID getLocale_current() {
    return eLocaleID.swigToEnum(JirrJNI.locale_current_get());
  }

  public static void locale_set(eLocaleID id) {
    JirrJNI.locale_set(id.swigValue());
  }

  public static long locale_lower(long x) {
    return JirrJNI.locale_lower(x);
  }

  public static long locale_upper(long x) {
    return JirrJNI.locale_upper(x);
  }

  public static int isFileExtension(SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path ext0, SWIGTYPE_p_io__path ext1, SWIGTYPE_p_io__path ext2) {
    return JirrJNI.isFileExtension(SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(ext0), SWIGTYPE_p_io__path.getCPtr(ext1), SWIGTYPE_p_io__path.getCPtr(ext2));
  }

  public static boolean hasFileExtension(SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path ext0, SWIGTYPE_p_io__path ext1, SWIGTYPE_p_io__path ext2) {
    return JirrJNI.hasFileExtension__SWIG_0(SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(ext0), SWIGTYPE_p_io__path.getCPtr(ext1), SWIGTYPE_p_io__path.getCPtr(ext2));
  }

  public static boolean hasFileExtension(SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path ext0, SWIGTYPE_p_io__path ext1) {
    return JirrJNI.hasFileExtension__SWIG_1(SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(ext0), SWIGTYPE_p_io__path.getCPtr(ext1));
  }

  public static boolean hasFileExtension(SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path ext0) {
    return JirrJNI.hasFileExtension__SWIG_2(SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(ext0));
  }

  public static SWIGTYPE_p_io__path cutFilenameExtension(SWIGTYPE_p_io__path dest, SWIGTYPE_p_io__path source) {
    return new SWIGTYPE_p_io__path(JirrJNI.cutFilenameExtension(SWIGTYPE_p_io__path.getCPtr(dest), SWIGTYPE_p_io__path.getCPtr(source)), false);
  }

  public static SWIGTYPE_p_io__path getFileNameExtension(SWIGTYPE_p_io__path dest, SWIGTYPE_p_io__path source) {
    return new SWIGTYPE_p_io__path(JirrJNI.getFileNameExtension(SWIGTYPE_p_io__path.getCPtr(dest), SWIGTYPE_p_io__path.getCPtr(source)), false);
  }

  public static SWIGTYPE_p_io__path deletePathFromFilename(SWIGTYPE_p_io__path filename) {
    return new SWIGTYPE_p_io__path(JirrJNI.deletePathFromFilename(SWIGTYPE_p_io__path.getCPtr(filename)), false);
  }

  public static SWIGTYPE_p_io__path deletePathFromPath(SWIGTYPE_p_io__path filename, int pathCount) {
    return new SWIGTYPE_p_io__path(JirrJNI.deletePathFromPath(SWIGTYPE_p_io__path.getCPtr(filename), pathCount), false);
  }

  public static int isInSameDirectory(SWIGTYPE_p_io__path path, SWIGTYPE_p_io__path file) {
    return JirrJNI.isInSameDirectory(SWIGTYPE_p_io__path.getCPtr(path), SWIGTYPE_p_io__path.getCPtr(file));
  }

  public static void splitFilename(SWIGTYPE_p_io__path name, SWIGTYPE_p_io__path path, SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path extension, boolean make_lower) {
    JirrJNI.splitFilename__SWIG_0(SWIGTYPE_p_io__path.getCPtr(name), SWIGTYPE_p_io__path.getCPtr(path), SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(extension), make_lower);
  }

  public static void splitFilename(SWIGTYPE_p_io__path name, SWIGTYPE_p_io__path path, SWIGTYPE_p_io__path filename, SWIGTYPE_p_io__path extension) {
    JirrJNI.splitFilename__SWIG_1(SWIGTYPE_p_io__path.getCPtr(name), SWIGTYPE_p_io__path.getCPtr(path), SWIGTYPE_p_io__path.getCPtr(filename), SWIGTYPE_p_io__path.getCPtr(extension));
  }

  public static void splitFilename(SWIGTYPE_p_io__path name, SWIGTYPE_p_io__path path, SWIGTYPE_p_io__path filename) {
    JirrJNI.splitFilename__SWIG_2(SWIGTYPE_p_io__path.getCPtr(name), SWIGTYPE_p_io__path.getCPtr(path), SWIGTYPE_p_io__path.getCPtr(filename));
  }

  public static void splitFilename(SWIGTYPE_p_io__path name, SWIGTYPE_p_io__path path) {
    JirrJNI.splitFilename__SWIG_3(SWIGTYPE_p_io__path.getCPtr(name), SWIGTYPE_p_io__path.getCPtr(path));
  }

  public static void splitFilename(SWIGTYPE_p_io__path name) {
    JirrJNI.splitFilename__SWIG_4(SWIGTYPE_p_io__path.getCPtr(name));
  }

  public static int isdigit(int c) {
    return JirrJNI.isdigit(c);
  }

  public static int isspace(int c) {
    return JirrJNI.isspace(c);
  }

  public static int isupper(int c) {
    return JirrJNI.isupper(c);
  }

  public static int RGBA16(long r, long g, long b, long a) {
    return JirrJNI.RGBA16__SWIG_0(r, g, b, a);
  }

  public static int RGBA16(long r, long g, long b) {
    return JirrJNI.RGBA16__SWIG_1(r, g, b);
  }

  public static int RGB16(long r, long g, long b) {
    return JirrJNI.RGB16(r, g, b);
  }

  public static int RGB16from16(int r, int g, int b) {
    return JirrJNI.RGB16from16(r, g, b);
  }

  public static int X8R8G8B8toA1R5G5B5(long color) {
    return JirrJNI.X8R8G8B8toA1R5G5B5(color);
  }

  public static int A8R8G8B8toA1R5G5B5(long color) {
    return JirrJNI.A8R8G8B8toA1R5G5B5(color);
  }

  public static int A8R8G8B8toR5G6B5(long color) {
    return JirrJNI.A8R8G8B8toR5G6B5(color);
  }

  public static long A1R5G5B5toA8R8G8B8(int color) {
    return JirrJNI.A1R5G5B5toA8R8G8B8(color);
  }

  public static long R5G6B5toA8R8G8B8(int color) {
    return JirrJNI.R5G6B5toA8R8G8B8(color);
  }

  public static int R5G6B5toA1R5G5B5(int color) {
    return JirrJNI.R5G6B5toA1R5G5B5(color);
  }

  public static int A1R5G5B5toR5G6B5(int color) {
    return JirrJNI.A1R5G5B5toR5G6B5(color);
  }

  public static long getAlpha(int color) {
    return JirrJNI.getAlpha(color);
  }

  public static long getRed(int color) {
    return JirrJNI.getRed(color);
  }

  public static long getGreen(int color) {
    return JirrJNI.getGreen(color);
  }

  public static long getBlue(int color) {
    return JirrJNI.getBlue(color);
  }

  public static int getAverage(short color) {
    return JirrJNI.getAverage(color);
  }

  public static SWIGTYPE_p_p_char getLightTypeNames() {
    long cPtr = JirrJNI.LightTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getSBuiltInVertexTypeNames() {
    long cPtr = JirrJNI.sBuiltInVertexTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static long getVertexPitchFromType(E_VERTEX_TYPE vertexType) {
    return JirrJNI.getVertexPitchFromType(vertexType.swigValue());
  }

  public static float pack_textureBlendFunc(E_BLEND_FACTOR srcFact, E_BLEND_FACTOR dstFact, E_MODULATE_FUNC modulate, long alphaSource) {
    return JirrJNI.pack_textureBlendFunc__SWIG_0(srcFact.swigValue(), dstFact.swigValue(), modulate.swigValue(), alphaSource);
  }

  public static float pack_textureBlendFunc(E_BLEND_FACTOR srcFact, E_BLEND_FACTOR dstFact, E_MODULATE_FUNC modulate) {
    return JirrJNI.pack_textureBlendFunc__SWIG_1(srcFact.swigValue(), dstFact.swigValue(), modulate.swigValue());
  }

  public static float pack_textureBlendFunc(E_BLEND_FACTOR srcFact, E_BLEND_FACTOR dstFact) {
    return JirrJNI.pack_textureBlendFunc__SWIG_2(srcFact.swigValue(), dstFact.swigValue());
  }

  public static void unpack_textureBlendFunc(SWIGTYPE_p_irr__video__E_BLEND_FACTOR srcFact, SWIGTYPE_p_irr__video__E_BLEND_FACTOR dstFact, SWIGTYPE_p_irr__video__E_MODULATE_FUNC modulo, SWIGTYPE_p_unsigned_int alphaSource, float param) {
    JirrJNI.unpack_textureBlendFunc(SWIGTYPE_p_irr__video__E_BLEND_FACTOR.getCPtr(srcFact), SWIGTYPE_p_irr__video__E_BLEND_FACTOR.getCPtr(dstFact), SWIGTYPE_p_irr__video__E_MODULATE_FUNC.getCPtr(modulo), SWIGTYPE_p_unsigned_int.getCPtr(alphaSource), param);
  }

  public static boolean textureBlendFunc_hasAlpha(E_BLEND_FACTOR factor) {
    return JirrJNI.textureBlendFunc_hasAlpha(factor.swigValue());
  }

  public static SWIGTYPE_p_p_char getPolygonOffsetDirectionNames() {
    long cPtr = JirrJNI.PolygonOffsetDirectionNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static long getMATERIAL_MAX_TEXTURES() {
    return JirrJNI.MATERIAL_MAX_TEXTURES_get();
  }

  public static void setIdentityMaterial(SMaterial value) {
    JirrJNI.IdentityMaterial_set(SMaterial.getCPtr(value), value);
  }

  public static SMaterial getIdentityMaterial() {
    long cPtr = JirrJNI.IdentityMaterial_get();
    return (cPtr == 0) ? null : new SMaterial(cPtr, false);
  }

  public static String getALLOW_ZWRITE_ON_TRANSPARENT() {
    return JirrJNI.ALLOW_ZWRITE_ON_TRANSPARENT_get();
  }

  public static String getCSM_TEXTURE_PATH() {
    return JirrJNI.CSM_TEXTURE_PATH_get();
  }

  public static String getLMTS_TEXTURE_PATH() {
    return JirrJNI.LMTS_TEXTURE_PATH_get();
  }

  public static String getMY3D_TEXTURE_PATH() {
    return JirrJNI.MY3D_TEXTURE_PATH_get();
  }

  public static String getCOLLADA_CREATE_SCENE_INSTANCES() {
    return JirrJNI.COLLADA_CREATE_SCENE_INSTANCES_get();
  }

  public static String getDMF_TEXTURE_PATH() {
    return JirrJNI.DMF_TEXTURE_PATH_get();
  }

  public static String getDMF_IGNORE_MATERIALS_DIRS() {
    return JirrJNI.DMF_IGNORE_MATERIALS_DIRS_get();
  }

  public static String getDMF_ALPHA_CHANNEL_REF() {
    return JirrJNI.DMF_ALPHA_CHANNEL_REF_get();
  }

  public static String getDMF_FLIP_ALPHA_TEXTURES() {
    return JirrJNI.DMF_FLIP_ALPHA_TEXTURES_get();
  }

  public static String getOBJ_TEXTURE_PATH() {
    return JirrJNI.OBJ_TEXTURE_PATH_get();
  }

  public static String getOBJ_LOADER_IGNORE_GROUPS() {
    return JirrJNI.OBJ_LOADER_IGNORE_GROUPS_get();
  }

  public static String getOBJ_LOADER_IGNORE_MATERIAL_FILES() {
    return JirrJNI.OBJ_LOADER_IGNORE_MATERIAL_FILES_get();
  }

  public static String getB3D_LOADER_IGNORE_MIPMAP_FLAG() {
    return JirrJNI.B3D_LOADER_IGNORE_MIPMAP_FLAG_get();
  }

  public static String getB3D_TEXTURE_PATH() {
    return JirrJNI.B3D_TEXTURE_PATH_get();
  }

  public static String getIRR_SCENE_MANAGER_IS_EDITOR() {
    return JirrJNI.IRR_SCENE_MANAGER_IS_EDITOR_get();
  }

  public static String getDEBUG_NORMAL_LENGTH() {
    return JirrJNI.DEBUG_NORMAL_LENGTH_get();
  }

  public static String getDEBUG_NORMAL_COLOR() {
    return JirrJNI.DEBUG_NORMAL_COLOR_get();
  }

  public static SWIGTYPE_p_p_char getGUIButtonStateNames() {
    long cPtr = JirrJNI.GUIButtonStateNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinTypeNames() {
    long cPtr = JirrJNI.GUISkinTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinColorNames() {
    long cPtr = JirrJNI.GUISkinColorNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinSizeNames() {
    long cPtr = JirrJNI.GUISkinSizeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinTextNames() {
    long cPtr = JirrJNI.GUISkinTextNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinIconNames() {
    long cPtr = JirrJNI.GUISkinIconNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUISkinFontNames() {
    long cPtr = JirrJNI.GUISkinFontNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getFogTypeNames() {
    long cPtr = JirrJNI.FogTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getGUICursorIconNames() {
    long cPtr = JirrJNI.GUICursorIconNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getParticleEmitterTypeNames() {
    long cPtr = JirrJNI.ParticleEmitterTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char getParticleAffectorTypeNames() {
    long cPtr = JirrJNI.ParticleAffectorTypeNames_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static short isEqual(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SWIGTYPE_p_unsigned_int pos, SWIGTYPE_p_p_char list, int listSize) {
    return JirrJNI.isEqual(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SWIGTYPE_p_unsigned_int.getCPtr(pos), SWIGTYPE_p_p_char.getCPtr(list), listSize);
  }

  public static float getAsFloat(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SWIGTYPE_p_unsigned_int pos) {
    return JirrJNI.getAsFloat(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SWIGTYPE_p_unsigned_int.getCPtr(pos));
  }

  public static vector3df getAsVector3df(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SWIGTYPE_p_unsigned_int pos) {
    return new vector3df(JirrJNI.getAsVector3df(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SWIGTYPE_p_unsigned_int.getCPtr(pos)), true);
  }

  public static void getAsStringList(SWIGTYPE_p_irr__core__arrayT_irr__core__stringT_char_irrAllocatorT_char_t_t_irrAllocatorT_irr__core__stringT_char_irrAllocatorT_char_t_t_t_t list, int max, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SWIGTYPE_p_unsigned_int startPos) {
    JirrJNI.getAsStringList(SWIGTYPE_p_irr__core__arrayT_irr__core__stringT_char_irrAllocatorT_char_t_t_irrAllocatorT_irr__core__stringT_char_irrAllocatorT_char_t_t_t_t.getCPtr(list), max, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SWIGTYPE_p_unsigned_int.getCPtr(startPos));
  }

  public static boolean getCullingFunction(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t cull) {
    return JirrJNI.getCullingFunction(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(cull));
  }

  public static short getDepthFunction(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string) {
    return JirrJNI.getDepthFunction(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string));
  }

  public static void getBlendFunc(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SBlendFunc blendfunc) {
    JirrJNI.getBlendFunc(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SBlendFunc.getCPtr(blendfunc), blendfunc);
  }

  public static vector3df getMD3Normal(long i, long j) {
    return new vector3df(JirrJNI.getMD3Normal(i, j), true);
  }

  public static void getModifierFunc(SModifierFunction fill, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t string, SWIGTYPE_p_unsigned_int pos) {
    JirrJNI.getModifierFunc(SModifierFunction.getCPtr(fill), fill, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(string), SWIGTYPE_p_unsigned_int.getCPtr(pos));
  }

  public static void dumpVarGroup(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t dest, SVarGroup group, int stack) {
    JirrJNI.dumpVarGroup(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(dest), SVarGroup.getCPtr(group), group, stack);
  }

  public static SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t dumpShader(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t dest, IShader shader, boolean entity) {
    return new SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t(JirrJNI.dumpShader__SWIG_0(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(dest), IShader.getCPtr(shader), shader, entity), false);
  }

  public static SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t dumpShader(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t dest, IShader shader) {
    return new SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t(JirrJNI.dumpShader__SWIG_1(SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(dest), IShader.getCPtr(shader), shader), false);
  }

  public static void getTextures(ITextureArray textures, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t name, SWIGTYPE_p_unsigned_int startPos, IFileSystem fileSystem, IVideoDriver driver) {
    JirrJNI.getTextures(ITextureArray.getCPtr(textures), textures, SWIGTYPE_p_irr__core__stringT_char_irrAllocatorT_char_t_t.getCPtr(name), SWIGTYPE_p_unsigned_int.getCPtr(startPos), IFileSystem.getCPtr(fileSystem), fileSystem, IVideoDriver.getCPtr(driver), driver);
  }

  public static void setPACK_STRUCT(SMD3Header value) {
    JirrJNI.PACK_STRUCT_set(SMD3Header.getCPtr(value), value);
  }

  public static SMD3Header getPACK_STRUCT() {
    long cPtr = JirrJNI.PACK_STRUCT_get();
    return (cPtr == 0) ? null : new SMD3Header(cPtr, false);
  }

  public static String createWchar(String str) {
    return JirrJNI.createWchar(str);
  }

  public static void instantiateAllDontExecMe() {
    JirrJNI.instantiateAllDontExecMe();
  }

  public static IGUIScrollBar castToIGUIScrollBar(IGUIElement guiElement) {
    long cPtr = JirrJNI.castToIGUIScrollBar(IGUIElement.getCPtr(guiElement), guiElement);
    return (cPtr == 0) ? null : new IGUIScrollBar(cPtr, false);
  }

  public static IGUIContextMenu castToIGUIContextMenu(IGUIElement guiElement) {
    long cPtr = JirrJNI.castToIGUIContextMenu(IGUIElement.getCPtr(guiElement), guiElement);
    return (cPtr == 0) ? null : new IGUIContextMenu(cPtr, false);
  }

  public static IGUIFileOpenDialog castToIGUIFileOpenDialog(IGUIElement guiElement) {
    long cPtr = JirrJNI.castToIGUIFileOpenDialog(IGUIElement.getCPtr(guiElement), guiElement);
    return (cPtr == 0) ? null : new IGUIFileOpenDialog(cPtr, false);
  }

  public static IGUIComboBox castToIGUIComboBox(IGUIElement guiElement) {
    long cPtr = JirrJNI.castToIGUIComboBox(IGUIElement.getCPtr(guiElement), guiElement);
    return (cPtr == 0) ? null : new IGUIComboBox(cPtr, false);
  }

  public static SWIGTYPE_p_void copySColorArrayToVoid(SColor[] textureBufferToCopy, dimension2di dim, SWIGTYPE_p_void textureLock) {
    long cPtr = JirrJNI.copySColorArrayToVoid(SColor.cArrayUnwrap(textureBufferToCopy), dimension2di.getCPtr(dim), dim, SWIGTYPE_p_void.getCPtr(textureLock));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void copyInt32ArrayToVoid(int[] textureBufferToCopy, dimension2di dim, SWIGTYPE_p_void textureLock) {
    long cPtr = JirrJNI.copyInt32ArrayToVoid(textureBufferToCopy, dimension2di.getCPtr(dim), dim, SWIGTYPE_p_void.getCPtr(textureLock));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void copyU32ArrayToVoid(long[] textureBufferToCopy, dimension2di dim, SWIGTYPE_p_void textureLock) {
    long cPtr = JirrJNI.copyU32ArrayToVoid(textureBufferToCopy, dimension2di.getCPtr(dim), dim, SWIGTYPE_p_void.getCPtr(textureLock));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static byte[] castVoidToByteArray(SWIGTYPE_p_void textureLock, dimension2di dim) {
    return JirrJNI.castVoidToByteArray(SWIGTYPE_p_void.getCPtr(textureLock), dimension2di.getCPtr(dim), dim);
  }

  public static long[] castVoidToU32Array(SWIGTYPE_p_void textureLock, dimension2di dim) {
    return JirrJNI.castVoidToU32Array(SWIGTYPE_p_void.getCPtr(textureLock), dimension2di.getCPtr(dim), dim);
  }

  public static int[] castVoidToInt32Array(SWIGTYPE_p_void textureLock, dimension2di dim) {
    return JirrJNI.castVoidToInt32Array(SWIGTYPE_p_void.getCPtr(textureLock), dimension2di.getCPtr(dim), dim);
  }

  public static IrrlichtDevice createDevice(E_DRIVER_TYPE deviceType, dimension2di windowSize, long bits, boolean fullscreen, boolean stencilbuffer, boolean vsync, IEventReceiver receiver) {
    long cPtr = JirrJNI.createDevice(deviceType.swigValue(), dimension2di.getCPtr(windowSize), bits, fullscreen, stencilbuffer, vsync, IEventReceiver.getCPtr(receiver), receiver);
    return (cPtr == 0) ? null : new IrrlichtDevice(cPtr, false);
  }

  public static IrrlichtDevice createDeviceEx(SIrrlichtCreationParameters parameters) {
    long cPtr = JirrJNI.createDeviceEx(SIrrlichtCreationParameters.getCPtr(parameters), parameters);
    return (cPtr == 0) ? null : new IrrlichtDevice(cPtr, false);
  }

}
