/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum ECURSOR_ICON {
  ECI_NORMAL,
  ECI_CROSS,
  ECI_HAND,
  ECI_HELP,
  ECI_IBEAM,
  ECI_NO,
  ECI_WAIT,
  ECI_SIZEALL,
  ECI_SIZENESW,
  ECI_SIZENWSE,
  ECI_SIZENS,
  ECI_SIZEWE,
  ECI_UP,
  ECI_COUNT;

  public final int swigValue() {
    return swigValue;
  }

  public static ECURSOR_ICON swigToEnum(int swigValue) {
    ECURSOR_ICON[] swigValues = ECURSOR_ICON.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (ECURSOR_ICON swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + ECURSOR_ICON.class + " with value " + swigValue);
  }

  private ECURSOR_ICON() {
    this.swigValue = SwigNext.next++;
  }

  private ECURSOR_ICON(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private ECURSOR_ICON(ECURSOR_ICON swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

