/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class IGUIEditBox extends IGUIElement {
  private long swigCPtr;

  protected IGUIEditBox(long cPtr, boolean cMemoryOwn) {
    super(JirrJNI.IGUIEditBox_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IGUIEditBox obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_IGUIEditBox(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setOverrideFont(IGUIFont font) {
    JirrJNI.IGUIEditBox_setOverrideFont__SWIG_0(swigCPtr, this, IGUIFont.getCPtr(font), font);
  }

  public void setOverrideFont() {
    JirrJNI.IGUIEditBox_setOverrideFont__SWIG_1(swigCPtr, this);
  }

  public IGUIFont getOverrideFont() {
    long cPtr = JirrJNI.IGUIEditBox_getOverrideFont(swigCPtr, this);
    return (cPtr == 0) ? null : new IGUIFont(cPtr, false);
  }

  public IGUIFont getActiveFont() {
    long cPtr = JirrJNI.IGUIEditBox_getActiveFont(swigCPtr, this);
    return (cPtr == 0) ? null : new IGUIFont(cPtr, false);
  }

  public void setOverrideColor(SColor color) {
    JirrJNI.IGUIEditBox_setOverrideColor(swigCPtr, this, SColor.getCPtr(color), color);
  }

  public SColor getOverrideColor() {
    return new SColor(JirrJNI.IGUIEditBox_getOverrideColor(swigCPtr, this), true);
  }

  public void enableOverrideColor(boolean enable) {
    JirrJNI.IGUIEditBox_enableOverrideColor(swigCPtr, this, enable);
  }

  public boolean isOverrideColorEnabled() {
    return JirrJNI.IGUIEditBox_isOverrideColorEnabled(swigCPtr, this);
  }

  public void setDrawBackground(boolean draw) {
    JirrJNI.IGUIEditBox_setDrawBackground(swigCPtr, this, draw);
  }

  public void setDrawBorder(boolean border) {
    JirrJNI.IGUIEditBox_setDrawBorder(swigCPtr, this, border);
  }

  public void setTextAlignment(SWIGTYPE_p_EGUI_ALIGNMENT horizontal, SWIGTYPE_p_EGUI_ALIGNMENT vertical) {
    JirrJNI.IGUIEditBox_setTextAlignment(swigCPtr, this, SWIGTYPE_p_EGUI_ALIGNMENT.getCPtr(horizontal), SWIGTYPE_p_EGUI_ALIGNMENT.getCPtr(vertical));
  }

  public void setWordWrap(boolean enable) {
    JirrJNI.IGUIEditBox_setWordWrap(swigCPtr, this, enable);
  }

  public boolean isWordWrapEnabled() {
    return JirrJNI.IGUIEditBox_isWordWrapEnabled(swigCPtr, this);
  }

  public void setMultiLine(boolean enable) {
    JirrJNI.IGUIEditBox_setMultiLine(swigCPtr, this, enable);
  }

  public boolean isMultiLineEnabled() {
    return JirrJNI.IGUIEditBox_isMultiLineEnabled(swigCPtr, this);
  }

  public void setAutoScroll(boolean enable) {
    JirrJNI.IGUIEditBox_setAutoScroll(swigCPtr, this, enable);
  }

  public boolean isAutoScrollEnabled() {
    return JirrJNI.IGUIEditBox_isAutoScrollEnabled(swigCPtr, this);
  }

  public void setPasswordBox(boolean passwordBox, char passwordChar) {
    JirrJNI.IGUIEditBox_setPasswordBox(swigCPtr, this, passwordBox, passwordChar);
  }

  public boolean isPasswordBox() {
    return JirrJNI.IGUIEditBox_isPasswordBox(swigCPtr, this);
  }

  public dimension2di getTextDimension() {
    return new dimension2di(JirrJNI.IGUIEditBox_getTextDimension(swigCPtr, this), true);
  }

  public void setMax(long max) {
    JirrJNI.IGUIEditBox_setMax(swigCPtr, this, max);
  }

  public long getMax() {
    return JirrJNI.IGUIEditBox_getMax(swigCPtr, this);
  }

}
