/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class IGUIStaticText extends IGUIElement {
  private long swigCPtr;

  protected IGUIStaticText(long cPtr, boolean cMemoryOwn) {
    super(JirrJNI.IGUIStaticText_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IGUIStaticText obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_IGUIStaticText(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setOverrideFont(IGUIFont font) {
    JirrJNI.IGUIStaticText_setOverrideFont__SWIG_0(swigCPtr, this, IGUIFont.getCPtr(font), font);
  }

  public void setOverrideFont() {
    JirrJNI.IGUIStaticText_setOverrideFont__SWIG_1(swigCPtr, this);
  }

  public IGUIFont getOverrideFont() {
    long cPtr = JirrJNI.IGUIStaticText_getOverrideFont(swigCPtr, this);
    return (cPtr == 0) ? null : new IGUIFont(cPtr, false);
  }

  public IGUIFont getActiveFont() {
    long cPtr = JirrJNI.IGUIStaticText_getActiveFont(swigCPtr, this);
    return (cPtr == 0) ? null : new IGUIFont(cPtr, false);
  }

  public void setOverrideColor(SColor color) {
    JirrJNI.IGUIStaticText_setOverrideColor(swigCPtr, this, SColor.getCPtr(color), color);
  }

  public SColor getOverrideColor() {
    return new SColor(JirrJNI.IGUIStaticText_getOverrideColor(swigCPtr, this), true);
  }

  public void enableOverrideColor(boolean enable) {
    JirrJNI.IGUIStaticText_enableOverrideColor(swigCPtr, this, enable);
  }

  public boolean isOverrideColorEnabled() {
    return JirrJNI.IGUIStaticText_isOverrideColorEnabled(swigCPtr, this);
  }

  public void setBackgroundColor(SColor color) {
    JirrJNI.IGUIStaticText_setBackgroundColor(swigCPtr, this, SColor.getCPtr(color), color);
  }

  public void setDrawBackground(boolean draw) {
    JirrJNI.IGUIStaticText_setDrawBackground(swigCPtr, this, draw);
  }

  public SColor getBackgroundColor() {
    return new SColor(JirrJNI.IGUIStaticText_getBackgroundColor(swigCPtr, this), true);
  }

  public boolean isDrawBackgroundEnabled() {
    return JirrJNI.IGUIStaticText_isDrawBackgroundEnabled(swigCPtr, this);
  }

  public void setDrawBorder(boolean draw) {
    JirrJNI.IGUIStaticText_setDrawBorder(swigCPtr, this, draw);
  }

  public boolean isDrawBorderEnabled() {
    return JirrJNI.IGUIStaticText_isDrawBorderEnabled(swigCPtr, this);
  }

  public void setTextAlignment(SWIGTYPE_p_EGUI_ALIGNMENT horizontal, SWIGTYPE_p_EGUI_ALIGNMENT vertical) {
    JirrJNI.IGUIStaticText_setTextAlignment(swigCPtr, this, SWIGTYPE_p_EGUI_ALIGNMENT.getCPtr(horizontal), SWIGTYPE_p_EGUI_ALIGNMENT.getCPtr(vertical));
  }

  public void setWordWrap(boolean enable) {
    JirrJNI.IGUIStaticText_setWordWrap(swigCPtr, this, enable);
  }

  public boolean isWordWrapEnabled() {
    return JirrJNI.IGUIStaticText_isWordWrapEnabled(swigCPtr, this);
  }

  public int getTextHeight() {
    return JirrJNI.IGUIStaticText_getTextHeight(swigCPtr, this);
  }

  public int getTextWidth() {
    return JirrJNI.IGUIStaticText_getTextWidth(swigCPtr, this);
  }

  public void setTextRestrainedInside(boolean restrainedInside) {
    JirrJNI.IGUIStaticText_setTextRestrainedInside(swigCPtr, this, restrainedInside);
  }

  public boolean isTextRestrainedInside() {
    return JirrJNI.IGUIStaticText_isTextRestrainedInside(swigCPtr, this);
  }

  public void setRightToLeft(boolean rtl) {
    JirrJNI.IGUIStaticText_setRightToLeft(swigCPtr, this, rtl);
  }

  public boolean isRightToLeft() {
    return JirrJNI.IGUIStaticText_isRightToLeft(swigCPtr, this);
  }

}
