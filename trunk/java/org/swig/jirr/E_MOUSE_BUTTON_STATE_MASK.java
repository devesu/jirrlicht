/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum E_MOUSE_BUTTON_STATE_MASK {
  EMBSM_LEFT(0x01),
  EMBSM_RIGHT(0x02),
  EMBSM_MIDDLE(0x04),
  EMBSM_EXTRA1(0x08),
  EMBSM_EXTRA2(0x10),
  EMBSM_FORCE_32_BIT(0x7fffffff);

  public final int swigValue() {
    return swigValue;
  }

  public static E_MOUSE_BUTTON_STATE_MASK swigToEnum(int swigValue) {
    E_MOUSE_BUTTON_STATE_MASK[] swigValues = E_MOUSE_BUTTON_STATE_MASK.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (E_MOUSE_BUTTON_STATE_MASK swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + E_MOUSE_BUTTON_STATE_MASK.class + " with value " + swigValue);
  }

  private E_MOUSE_BUTTON_STATE_MASK() {
    this.swigValue = SwigNext.next++;
  }

  private E_MOUSE_BUTTON_STATE_MASK(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private E_MOUSE_BUTTON_STATE_MASK(E_MOUSE_BUTTON_STATE_MASK swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

