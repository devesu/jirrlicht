/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum E_ATTRIBUTE_READ_WRITE_FLAGS {
  EARWF_FOR_FILE(0x00000001),
  EARWF_FOR_EDITOR(0x00000002),
  EARWF_USE_RELATIVE_PATHS(0x00000004);

  public final int swigValue() {
    return swigValue;
  }

  public static E_ATTRIBUTE_READ_WRITE_FLAGS swigToEnum(int swigValue) {
    E_ATTRIBUTE_READ_WRITE_FLAGS[] swigValues = E_ATTRIBUTE_READ_WRITE_FLAGS.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (E_ATTRIBUTE_READ_WRITE_FLAGS swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + E_ATTRIBUTE_READ_WRITE_FLAGS.class + " with value " + swigValue);
  }

  private E_ATTRIBUTE_READ_WRITE_FLAGS() {
    this.swigValue = SwigNext.next++;
  }

  private E_ATTRIBUTE_READ_WRITE_FLAGS(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private E_ATTRIBUTE_READ_WRITE_FLAGS(E_ATTRIBUTE_READ_WRITE_FLAGS swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

