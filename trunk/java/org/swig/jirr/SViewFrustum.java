/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public class SViewFrustum {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SViewFrustum(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SViewFrustum obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_SViewFrustum(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SViewFrustum() {
    this(JirrJNI.new_SViewFrustum__SWIG_0(), true);
  }

  public SViewFrustum(SViewFrustum other) {
    this(JirrJNI.new_SViewFrustum__SWIG_1(SViewFrustum.getCPtr(other), other), true);
  }

  public SViewFrustum(CMatrix4f mat) {
    this(JirrJNI.new_SViewFrustum__SWIG_2(CMatrix4f.getCPtr(mat)), true);
  }

  public void setFrom(CMatrix4f mat) {
    JirrJNI.SViewFrustum_setFrom(swigCPtr, this, CMatrix4f.getCPtr(mat));
  }

  public void transform(CMatrix4f mat) {
    JirrJNI.SViewFrustum_transform(swigCPtr, this, CMatrix4f.getCPtr(mat));
  }

  public vector3df getFarLeftUp() {
    return new vector3df(JirrJNI.SViewFrustum_getFarLeftUp(swigCPtr, this), true);
  }

  public vector3df getFarLeftDown() {
    return new vector3df(JirrJNI.SViewFrustum_getFarLeftDown(swigCPtr, this), true);
  }

  public vector3df getFarRightUp() {
    return new vector3df(JirrJNI.SViewFrustum_getFarRightUp(swigCPtr, this), true);
  }

  public vector3df getFarRightDown() {
    return new vector3df(JirrJNI.SViewFrustum_getFarRightDown(swigCPtr, this), true);
  }

  public vector3df getNearLeftUp() {
    return new vector3df(JirrJNI.SViewFrustum_getNearLeftUp(swigCPtr, this), true);
  }

  public vector3df getNearLeftDown() {
    return new vector3df(JirrJNI.SViewFrustum_getNearLeftDown(swigCPtr, this), true);
  }

  public vector3df getNearRightUp() {
    return new vector3df(JirrJNI.SViewFrustum_getNearRightUp(swigCPtr, this), true);
  }

  public vector3df getNearRightDown() {
    return new vector3df(JirrJNI.SViewFrustum_getNearRightDown(swigCPtr, this), true);
  }

  public aabbox3df getBoundingBoxConst() {
    return new aabbox3df(JirrJNI.SViewFrustum_getBoundingBoxConst(swigCPtr, this), false);
  }

  public void recalculateBoundingBox() {
    JirrJNI.SViewFrustum_recalculateBoundingBox(swigCPtr, this);
  }

  public CMatrix4f getTransform(E_TRANSFORMATION_STATE state) {
    return new CMatrix4f(JirrJNI.SViewFrustum_getTransform__SWIG_0(swigCPtr, this, state.swigValue()), false);
  }

  public boolean clipLine(line3df line) {
    return JirrJNI.SViewFrustum_clipLine(swigCPtr, this, line3df.getCPtr(line), line);
  }

  public void setCameraPosition(vector3df value) {
    JirrJNI.SViewFrustum_cameraPosition_set(swigCPtr, this, vector3df.getCPtr(value), value);
  }

  public vector3df getCameraPosition() {
    long cPtr = JirrJNI.SViewFrustum_cameraPosition_get(swigCPtr, this);
    return (cPtr == 0) ? null : new vector3df(cPtr, false);
  }

  public void setPlanes(plane3df value) {
    JirrJNI.SViewFrustum_planes_set(swigCPtr, this, plane3df.getCPtr(value), value);
  }

  public plane3df getPlanes() {
    long cPtr = JirrJNI.SViewFrustum_planes_get(swigCPtr, this);
    return (cPtr == 0) ? null : new plane3df(cPtr, false);
  }

  public void setBoundingBox(aabbox3df value) {
    JirrJNI.SViewFrustum_boundingBox_set(swigCPtr, this, aabbox3df.getCPtr(value), value);
  }

  public aabbox3df getBoundingBox() {
    long cPtr = JirrJNI.SViewFrustum_boundingBox_get(swigCPtr, this);
    return (cPtr == 0) ? null : new aabbox3df(cPtr, false);
  }

  public enum VFPLANES {
    VF_FAR_PLANE(0),
    VF_NEAR_PLANE,
    VF_LEFT_PLANE,
    VF_RIGHT_PLANE,
    VF_BOTTOM_PLANE,
    VF_TOP_PLANE,
    VF_PLANE_COUNT;

    public final int swigValue() {
      return swigValue;
    }

    public static VFPLANES swigToEnum(int swigValue) {
      VFPLANES[] swigValues = VFPLANES.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (VFPLANES swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + VFPLANES.class + " with value " + swigValue);
    }

    private VFPLANES() {
      this.swigValue = SwigNext.next++;
    }

    private VFPLANES(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    private VFPLANES(VFPLANES swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
