/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

import java.util.logging.Level;
import java.util.logging.Logger;

public class vector2di {
  protected long swigCPtr;
  protected boolean swigCMemOwn;

  protected vector2di(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(vector2di obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

    @Override
  protected void finalize() {
        try {
            super.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(vector2di.class.getName()).log(Level.SEVERE, null, ex);
        }
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JirrJNI.delete_vector2di(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public vector2di() {
    this(JirrJNI.new_vector2di__SWIG_0(), true);
  }

  public vector2di(int nx, int ny) {
    this(JirrJNI.new_vector2di__SWIG_1(nx, ny), true);
  }

  public vector2di(int n) {
    this(JirrJNI.new_vector2di__SWIG_2(n), true);
  }

  public vector2di(vector2di other) {
    this(JirrJNI.new_vector2di__SWIG_3(vector2di.getCPtr(other), other), true);
  }

  public vector2di(dimension2di other) {
    this(JirrJNI.new_vector2di__SWIG_4(dimension2di.getCPtr(other), other), true);
  }

  public vector2di subtractOperator() {
    return new vector2di(JirrJNI.vector2di_subtractOperator__SWIG_0(swigCPtr, this), true);
  }

  public vector2di assignOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_assignOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), false);
  }

  public vector2di assignOperator(dimension2di other) {
    return new vector2di(JirrJNI.vector2di_assignOperator__SWIG_1(swigCPtr, this, dimension2di.getCPtr(other), other), false);
  }

  public vector2di addOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_addOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), true);
  }

  public vector2di addOperator(dimension2di other) {
    return new vector2di(JirrJNI.vector2di_addOperator__SWIG_1(swigCPtr, this, dimension2di.getCPtr(other), other), true);
  }

  public vector2di assignPlusOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_assignPlusOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), false);
  }

  public vector2di addOperator(int v) {
    return new vector2di(JirrJNI.vector2di_addOperator__SWIG_2(swigCPtr, this, v), true);
  }

  public vector2di assignPlusOperator(int v) {
    return new vector2di(JirrJNI.vector2di_assignPlusOperator__SWIG_1(swigCPtr, this, v), false);
  }

  public vector2di assignPlusOperator(dimension2di other) {
    return new vector2di(JirrJNI.vector2di_assignPlusOperator__SWIG_2(swigCPtr, this, dimension2di.getCPtr(other), other), false);
  }

  public vector2di subtractOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_subtractOperator__SWIG_1(swigCPtr, this, vector2di.getCPtr(other), other), true);
  }

  public vector2di subtractOperator(dimension2di other) {
    return new vector2di(JirrJNI.vector2di_subtractOperator__SWIG_2(swigCPtr, this, dimension2di.getCPtr(other), other), true);
  }

  public vector2di assignMinusOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_assignMinusOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), false);
  }

  public vector2di subtractOperator(int v) {
    return new vector2di(JirrJNI.vector2di_subtractOperator__SWIG_3(swigCPtr, this, v), true);
  }

  public vector2di assignMinusOperator(int v) {
    return new vector2di(JirrJNI.vector2di_assignMinusOperator__SWIG_1(swigCPtr, this, v), false);
  }

  public vector2di assignMinusOperator(dimension2di other) {
    return new vector2di(JirrJNI.vector2di_assignMinusOperator__SWIG_2(swigCPtr, this, dimension2di.getCPtr(other), other), false);
  }

  public vector2di timesOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_timesOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), true);
  }

  public vector2di assignTimesOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_assignTimesOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), false);
  }

  public vector2di timesOperator(int v) {
    return new vector2di(JirrJNI.vector2di_timesOperator__SWIG_1(swigCPtr, this, v), true);
  }

  public vector2di assignTimesOperator(int v) {
    return new vector2di(JirrJNI.vector2di_assignTimesOperator__SWIG_1(swigCPtr, this, v), false);
  }

  public vector2di dividedOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_dividedOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), true);
  }

  public vector2di assignDivideOperator(vector2di other) {
    return new vector2di(JirrJNI.vector2di_assignDivideOperator__SWIG_0(swigCPtr, this, vector2di.getCPtr(other), other), false);
  }

  public vector2di dividedOperator(int v) {
    return new vector2di(JirrJNI.vector2di_dividedOperator__SWIG_1(swigCPtr, this, v), true);
  }

  public vector2di assignDivideOperator(int v) {
    return new vector2di(JirrJNI.vector2di_assignDivideOperator__SWIG_1(swigCPtr, this, v), false);
  }

  public boolean lessThanOrEqualOperator(vector2di other) {
    return JirrJNI.vector2di_lessThanOrEqualOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean moreThanOrEqualOperator(vector2di other) {
    return JirrJNI.vector2di_moreThanOrEqualOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean lessThanOperator(vector2di other) {
    return JirrJNI.vector2di_lessThanOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean moreThanOperator(vector2di other) {
    return JirrJNI.vector2di_moreThanOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean equalsOperator(vector2di other) {
    return JirrJNI.vector2di_equalsOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean notEqualsOperator(vector2di other) {
    return JirrJNI.vector2di_notEqualsOperator(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public boolean equals(vector2di other) {
    return JirrJNI.vector2di_equals(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public vector2di set(int nx, int ny) {
    return new vector2di(JirrJNI.vector2di_set__SWIG_0(swigCPtr, this, nx, ny), false);
  }

  public vector2di set(vector2di p) {
    return new vector2di(JirrJNI.vector2di_set__SWIG_1(swigCPtr, this, vector2di.getCPtr(p), p), false);
  }

  public int getLength() {
    return JirrJNI.vector2di_getLength(swigCPtr, this);
  }

  public int getLengthSQ() {
    return JirrJNI.vector2di_getLengthSQ(swigCPtr, this);
  }

  public int dotProduct(vector2di other) {
    return JirrJNI.vector2di_dotProduct(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public int getDistanceFrom(vector2di other) {
    return JirrJNI.vector2di_getDistanceFrom(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public int getDistanceFromSQ(vector2di other) {
    return JirrJNI.vector2di_getDistanceFromSQ(swigCPtr, this, vector2di.getCPtr(other), other);
  }

  public vector2di rotateBy(double degrees, vector2di center) {
    return new vector2di(JirrJNI.vector2di_rotateBy__SWIG_0(swigCPtr, this, degrees, vector2di.getCPtr(center), center), false);
  }

  public vector2di rotateBy(double degrees) {
    return new vector2di(JirrJNI.vector2di_rotateBy__SWIG_1(swigCPtr, this, degrees), false);
  }

  public vector2di normalize() {
    return new vector2di(JirrJNI.vector2di_normalize(swigCPtr, this), false);
  }

  public double getAngleTrig() {
    return JirrJNI.vector2di_getAngleTrig(swigCPtr, this);
  }

  public double getAngle() {
    return JirrJNI.vector2di_getAngle(swigCPtr, this);
  }

  public double getAngleWith(vector2di b) {
    return JirrJNI.vector2di_getAngleWith(swigCPtr, this, vector2di.getCPtr(b), b);
  }

  public boolean isBetweenPoints(vector2di begin, vector2di end) {
    return JirrJNI.vector2di_isBetweenPoints(swigCPtr, this, vector2di.getCPtr(begin), begin, vector2di.getCPtr(end), end);
  }

  public vector2di getInterpolated(vector2di other, double d) {
    return new vector2di(JirrJNI.vector2di_getInterpolated(swigCPtr, this, vector2di.getCPtr(other), other, d), true);
  }

  public vector2di getInterpolated_quadratic(vector2di v2, vector2di v3, double d) {
    return new vector2di(JirrJNI.vector2di_getInterpolated_quadratic(swigCPtr, this, vector2di.getCPtr(v2), v2, vector2di.getCPtr(v3), v3, d), true);
  }

  public vector2di interpolate(vector2di a, vector2di b, double d) {
    return new vector2di(JirrJNI.vector2di_interpolate(swigCPtr, this, vector2di.getCPtr(a), a, vector2di.getCPtr(b), b, d), false);
  }

  public void setX(int value) {
    JirrJNI.vector2di_X_set(swigCPtr, this, value);
  }

  public int getX() {
    return JirrJNI.vector2di_X_get(swigCPtr, this);
  }

  public void setY(int value) {
    JirrJNI.vector2di_Y_set(swigCPtr, this, value);
  }

  public int getY() {
    return JirrJNI.vector2di_Y_get(swigCPtr, this);
  }

    @Override
    public String toString() {
        return "X="+getX()+" Y="+getY();
    }
}
