/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.swig.jirr;

public enum E_SCENE_NODE_RENDER_PASS {
  ESNRP_NONE(0),
  ESNRP_CAMERA(1),
  ESNRP_LIGHT(2),
  ESNRP_SKY_BOX(4),
  ESNRP_AUTOMATIC(24),
  ESNRP_SOLID(8),
  ESNRP_TRANSPARENT(16),
  ESNRP_TRANSPARENT_EFFECT(32),
  ESNRP_SHADOW(64);

  public final int swigValue() {
    return swigValue;
  }

  public static E_SCENE_NODE_RENDER_PASS swigToEnum(int swigValue) {
    E_SCENE_NODE_RENDER_PASS[] swigValues = E_SCENE_NODE_RENDER_PASS.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (E_SCENE_NODE_RENDER_PASS swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + E_SCENE_NODE_RENDER_PASS.class + " with value " + swigValue);
  }

  private E_SCENE_NODE_RENDER_PASS() {
    this.swigValue = SwigNext.next++;
  }

  private E_SCENE_NODE_RENDER_PASS(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  private E_SCENE_NODE_RENDER_PASS(E_SCENE_NODE_RENDER_PASS swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

